---
http_interactions:
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/portal.wwptl_login.show_site2pstoretoken?p_cancel=http://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login&p_url=http://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (G;max-age=240+0;age=0;ecid=13008061230588,0)
      Date:
      - Thu, 03 May 2018 16:23:55 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwptl_login.show_site2pstoretoken"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+35D12F9FF8914C95BC8673205FF7B273+E6B62A0FFCA160F9C2DA84DB4D7651A95CEC8FF17D5E97A0F1B8E57944B9F40015EBCB2DB0C4BAC3AD7B65637C828EB9B5E33FAEF1322921FA09EA106B5AE7DD380F3640FDC80B8C87FACFB599E7B2AA8C2E9AB3D3E6E809;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        <HTML>
        <HEAD>
        <meta http-equiv="refresh" content="58">
        </HEAD>
        <BODY>
        <FORM NAME="freshTokenForm">
        <INPUT TYPE="hidden" NAME="site2pstoretoken" VALUE="v1.2~C178B4ED~69D78A014E0163CBA0DDFB4C83879CCAFB89E308C4C125CB040D03997290EA3F70B5723D14D24F193A221E91CAFA1BE7D4D291ED5FFED9C6B1A2A0D46C97ED1917882C4AF13A929AF84E43EE1DEEE32565A1AFAA3BEA9AB1A9058DF0A037540D0ED4E3B1FAF01686EFC92042135776386B42310680162B38A025B3CAC9794BAAED6AE3B5FD721BA969E2370F09C5B3FD3113C8B4BAF798917987A5850F5637FE05EAADD235C13F3FC89BA2B624C6B25B971BB3A5DD41889A93F072DB4CF671AC050750E178BBFA5957C9031B07BE9E7AA6A7C6F2F4053CA8F6D65BE2E6D2BE850E870E55B30805B6FD741BE8D239BA53D5131094C7146280DFEF9BD103688F179956145B818C2E4C514BD54F3D00F65F18D808B390558E7AD1FA3F7B2155871B5E6EB1E42CE64C92">
        </FORM>
        </BODY>
        </HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+35D12F9FF8914C95BC8673205FF7B273+E6B62A0FFCA160F9C2DA84DB4D7651A95CEC8FF17D5E97A0F1B8E57944B9F40015EBCB2DB0C4BAC3AD7B65637C828EB9B5E33FAEF1322921FA09EA106B5AE7DD380F3640FDC80B8C87FACFB599E7B2AA8C2E9AB3D3E6E809
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=214272;ecid=13076780707554,0)
      Date:
      - Thu, 03 May 2018 16:23:55 GMT
      Content-Location:
      - "/servlet/page/ks_utv/st_login"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: post
    uri: https://nkflogin.kampsport.no/pls/orasso/orasso.wwsso_app_admin.ls_login
    body:
      encoding: UTF-8
      string: site2pstoretoken=vp_param=&ssousername=40001062&password=xKm75LlFgH3u
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkflogin.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '679'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Cache-Control:
      - private
      Location:
      - https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=4744544155316,0)
      Date:
      - Thu, 03 May 2018 16:23:57 GMT
      Set-Cookie:
      - SSO_ID=v1.2~1~0B1BE60E590599A9F31266DF64A162309C4989C2405AF9F48337E19779B7BDE2834D8743268F177012749D3E584D58195A8FE215E4C83E15FBBCD49B48673C0F91BC207CB3F2873A2335F62A59DD4E51014C93C8A5EE4FAED3C94317BB0434AB78B82B7BDD0FBF595A8F156EBB840F54F924B0CD3C15B823497C02BF22F12A66A2B65ED5E51F5CD3BBA41F3A96BB169C8C70403AA783BB6433E30BA934BD3A9D708F2401133FD12C6443F79104B65378975E872A0AF7F9CD0F7DE4E5F9990958D0BDE5DDE462FF39E4F386D4535D7E6F7224717CD168CD1B62209F0CE64FACECC47EFEF1A35CC0F7743C095B237D8501088CF90A01DC072781EDC9AC45414A76;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: <HTML><HEAD><TITLE>Redirect to https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~2406B595BF57E3166E3FAA32C370B1E51A8962BFCB7D29A9E483E3C6298CFD38C96463B236A65D0D5413E22C0DBD0BFC90D07DC53FA6CA0F0110E2C4488A48C76A14BA2EAC08EE9FEAF41A289EE6AD86955E5080BFB32C90B7D66F1F9B0764F4A696D385FBC4044F473B43164448AA86072411284E38FCCF292557B33F887B4530D1B8EDFE5A776C6EBCDC28C8CF5C246972FA6F710396E1E6159C2D9495C759E1CAC3CDE26C456020425E5DBD835C8D1EECB115C04346281C8B1238F9F07BF7B0D241E096893649599EC6972219A2D8BEA1C5F436FBCA03FBA1AD68A2DBCA72B4B436DA3D24D45BDBA5C9853D0FF9951CD6C13D3735FBBF932C302750ABC8CFC14E5CC976CB2BE734D320F2E94BDD41D0435D505D4B3965A6A4B1E3E424008142CE28C98F90F5EE6E267ED1E3B218887705EBD32CCAC3D44ECA2A5B4E40754C33A83DE5C4E8AF1121B1D4AD1C80501AD8DA9F860601F040CB286E5F001EBF7D431EBD3C9176C18E065ADEE43C59C5AD629DE2992D439BF0D047C20FC8476225</TITLE></HEAD><BODY><A
        HREF="https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~2406B595BF57E3166E3FAA32C370B1E51A8962BFCB7D29A9E483E3C6298CFD38C96463B236A65D0D5413E22C0DBD0BFC90D07DC53FA6CA0F0110E2C4488A48C76A14BA2EAC08EE9FEAF41A289EE6AD86955E5080BFB32C90B7D66F1F9B0764F4A696D385FBC4044F473B43164448AA86072411284E38FCCF292557B33F887B4530D1B8EDFE5A776C6EBCDC28C8CF5C246972FA6F710396E1E6159C2D9495C759E1CAC3CDE26C456020425E5DBD835C8D1EECB115C04346281C8B1238F9F07BF7B0D241E096893649599EC6972219A2D8BEA1C5F436FBCA03FBA1AD68A2DBCA72B4B436DA3D24D45BDBA5C9853D0FF9951CD6C13D3735FBBF932C302750ABC8CFC14E5CC976CB2BE734D320F2E94BDD41D0435D505D4B3965A6A4B1E3E424008142CE28C98F90F5EE6E267ED1E3B218887705EBD32CCAC3D44ECA2A5B4E40754C33A83DE5C4E8AF1121B1D4AD1C80501AD8DA9F860601F040CB286E5F001EBF7D431EBD3C9176C18E065ADEE43C59C5AD629DE2992D439BF0D047C20FC8476225">https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~2406B595BF57E3166E3FAA32C370B1E51A8962BFCB7D29A9E483E3C6298CFD38C96463B236A65D0D5413E22C0DBD0BFC90D07DC53FA6CA0F0110E2C4488A48C76A14BA2EAC08EE9FEAF41A289EE6AD86955E5080BFB32C90B7D66F1F9B0764F4A696D385FBC4044F473B43164448AA86072411284E38FCCF292557B33F887B4530D1B8EDFE5A776C6EBCDC28C8CF5C246972FA6F710396E1E6159C2D9495C759E1CAC3CDE26C456020425E5DBD835C8D1EECB115C04346281C8B1238F9F07BF7B0D241E096893649599EC6972219A2D8BEA1C5F436FBCA03FBA1AD68A2DBCA72B4B436DA3D24D45BDBA5C9853D0FF9951CD6C13D3735FBBF932C302750ABC8CFC14E5CC976CB2BE734D320F2E94BDD41D0435D505D4B3965A6A4B1E3E424008142CE28C98F90F5EE6E267ED1E3B218887705EBD32CCAC3D44ECA2A5B4E40754C33A83DE5C4E8AF1121B1D4AD1C80501AD8DA9F860601F040CB286E5F001EBF7D431EBD3C9176C18E065ADEE43C59C5AD629DE2992D439BF0D047C20FC8476225</A></BODY></HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+35D12F9FF8914C95BC8673205FF7B273+E6B62A0FFCA160F9C2DA84DB4D7651A95CEC8FF17D5E97A0F1B8E57944B9F40015EBCB2DB0C4BAC3AD7B65637C828EB9B5E33FAEF1322921FA09EA106B5AE7DD380F3640FDC80B8C87FACFB599E7B2AA8C2E9AB3D3E6E809
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=1222670972733,0)
      Content-Length:
      - '0'
      Date:
      - Thu, 03 May 2018 16:23:57 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwsec_app_priv.process_signon"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+00E66AE4664E4E0D97CE2A0E723A8EAB+F99D26761A1E8244AED9B6F02FB846AD8D54E4777C2C85D6F81819B5658CC86B90A4DF93C5C291A22C11B5634514773C84E5BA3A3730177B1EA52D502A4400A1ABF84DBB2A4AFA3852B8E954B73B7BA8E5796375F300553A;
        path=/
      - portal_url=; expires=Mon, 01-Jan-1990 08:00:00 GMT; path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+00E66AE4664E4E0D97CE2A0E723A8EAB+F99D26761A1E8244AED9B6F02FB846AD8D54E4777C2C85D6F81819B5658CC86B90A4DF93C5C291A22C11B5634514773C84E5BA3A3730177B1EA52D502A4400A1ABF84DBB2A4AFA3852B8E954B73B7BA8E5796375F300553A
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=3009377380480,0)
      Content-Length:
      - '0'
      Date:
      - Thu, 03 May 2018 16:24:10 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.st_login_proc.set_language"
      Set-Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; expires=Sat, 04-May-2019 02:24:10 GMT; path=/
      - portal=9.0.3+no-no+n+NORWAY+E8E65A44391A4722ACDC0D61DDC8AE54+C95870B8E924C56F31EA6C47DA21E3D2EA39C8CB47F5A645E1D332E5E35B77241FC72122A825BF91D93F18FC686878C56BBBFDEB3C01359122C88EDDA5C13E2CB33881722B0F8AEF70D96B2FB28A7F31BCD779810AF4281A;
        path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+E8E65A44391A4722ACDC0D61DDC8AE54+C95870B8E924C56F31EA6C47DA21E3D2EA39C8CB47F5A645E1D332E5E35B77241FC72122A825BF91D93F18FC686878C56BBBFDEB3C01359122C88EDDA5C13E2CB33881722B0F8AEF70D96B2FB28A7F31BCD779810AF4281A
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=215007;ecid=3026557249893,0)
      Date:
      - Thu, 03 May 2018 16:24:10 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: post
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: UTF-8
      string: p_ks_reg_medladm_action=&p_page_search=&frm_27_v01=&frm_27_v02=&frm_27_v03=&frm_27_v04=40001062&p_mode=&f_utvalg=vis&f_informasjon=skjul&frm_27_v46=11&frm_27_v47=11&frm_27_v05=1&frm_27_v10=162&frm_27_v12=O&frm_27_v49=N&frm_27_v06=1&frm_27_v07=1034&frm_27_v48=&frm_27_v13=1520
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+E8E65A44391A4722ACDC0D61DDC8AE54+C95870B8E924C56F31EA6C47DA21E3D2EA39C8CB47F5A645E1D332E5E35B77241FC72122A825BF91D93F18FC686878C56BBBFDEB3C01359122C88EDDA5C13E2CB33881722B0F8AEF70D96B2FB28A7F31BCD779810AF4281A
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '275'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=205786;ecid=4813263647031,0)
      Date:
      - Thu, 03 May 2018 16:24:12 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_komite_verv?p_cr_par
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.5 Ruby/2.4.4p296 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+E8E65A44391A4722ACDC0D61DDC8AE54+C95870B8E924C56F31EA6C47DA21E3D2EA39C8CB47F5A645E1D332E5E35B77241FC72122A825BF91D93F18FC686878C56BBBFDEB3C01359122C88EDDA5C13E2CB33881722B0F8AEF70D96B2FB28A7F31BCD779810AF4281A
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=1;ecid=11547772370827,0)
      Date:
      - Thu, 03 May 2018 16:24:16 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_komite_verv"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
recorded_with: VCR 4.0.0
