---
http_interactions:
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/portal.wwptl_login.show_site2pstoretoken?p_cancel=http://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login&p_url=http://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (H;max-age=240+0;age=88;ecid=10273824860028,0)
      Date:
      - Mon, 27 Aug 2018 12:14:57 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwptl_login.show_site2pstoretoken"
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        <HTML>
        <HEAD>
        <meta http-equiv="refresh" content="58">
        </HEAD>
        <BODY>
        <FORM NAME="freshTokenForm">
        <INPUT TYPE="hidden" NAME="site2pstoretoken" VALUE="v1.2~C178B4ED~
        </FORM>
        </BODY>
        </HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=545606;ecid=412579948428,0)
      Date:
      - Mon, 27 Aug 2018 12:16:25 GMT
      Content-Location:
      - "/servlet/page/ks_utv/st_login"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+EE5919EB0D12477495A39DD40A8740A6+7B61FBBD9A596666CBAAEF0A0911308A5C676F2E320508AF93E6FC692734B864B5AA03287DD9EDB3D84CB40124B25EE097F33B1DFDD969CB3B3AB027134C3081C6138192A6C5ED536DA88B25C5B16F4546870A47162A4A90;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: post
    uri: https://nkflogin.kampsport.no/pls/orasso/orasso.wwsso_app_admin.ls_login
    body:
      encoding: UTF-8
      string: site2pstoretoken=v1.2~C178B4ED~970B40C34F51D81D9AA13D752D56872B6ABADD613910D1901AA5C7C809655DB2C26680F6E482F0E7749473EC3F22F704DA4D80A81E11CC91E9FB065127C178BF917908F83211E4A1D0CF9A57D3C0BF6DF61E00DC890B8494351362B2EBE2BEF34C01F83ADCB58E557DC0C35903109D6518D0EE55212E1442FF6001710F5BA9C17ED5966FDA683F4ACE68443613A7105E0CC96F403BE89C95AC1D6F4C57676BD64977F38BE67EF433EE89A22FE5D667C3416562C03C8195729E8FB206ADC9CEEC0787711E651E5DEA702C549C70060695D614FFAD3B7BD981EDA16DA48FCDBB332596F6A0A92473B6B296F7AE2ECD44FACE0F955D63C015F8053324A107B1CBE4ED1DCC08D20BDF5EB666F99273A3537DA88F02D6E0F9192F414439402DE98D20&p_param=&ssousername=40001062&password=xKm75LlFgH3u
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkflogin.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '659'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Cache-Control:
      - private
      Location:
      - https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~D62DDEB3B3E029BE82B8B0D81CBB4D9A7AF7D8AF92E92A9D55CEBF1DE54FF54D64CAAB292AD7AC81A7273E0614C1B3D0689E2966BEF677EC6A65AF399AE1AB07A8025359603812FC2E6EFB51E1E939D47F1AA5F75192E103E64C9F84D7254E661A4858FC5937D006B514CB31B6B50D1EB42B1A42E1DEA2C277E04A7187BB5920D34626926B435C840AD55B0819F345DEF78E59F7EA7ECDF32782FF1E1D0F2248F02D4809E2DBBBF6F2EEE1967D75D9825CBC6E74DBBCFB088355A778E60E5F83A8217FADE69A384CDF9FFF32C38482301A8590C3E9F3CB87205B2648763DA57818D0C476335565E13B93E594BE48C86761E8E786B8928745EBA06182B0394DEBD8D9302E40780658A4B1B0DE3C0C25512757AF92DE93BE39F57FD6E23A579AB8CFF2E668DC3E6F9C0498AF899900A96368151D69D49DFA257CA003E741D37BB683396E551324F37DDCEBE5E106512CEE671D4ACABE7185A86B3CB217CC838DD7CAE27C0E6991749426A1BB00AE6C61C2FC8A337C9A9044DA
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=10205105384471,0)
      Date:
      - Mon, 27 Aug 2018 12:16:27 GMT
      Set-Cookie:
      - SSO_ID=v1.2~1~B56683FF64FA5BEF13D07B08B2C235BC365CBDAFABE5793A6BBA82997A7F93700A32A68AF88DD8F439706F0EDC22AF965F5960CE0C2E12663FDC5DA379E7E64C7C7A66CD9A249A9B5AA06AC580BF1A4797AC0428252EC1D28784883A290C836818F17C94FD307E4DC31329D1E5640C20AFDBDCE190D4E1D65AE12179D972E4F69EB430252312B0EFABDE4B19D5D3AC7D01C75D9F124A842C7D2DF2AC8D55E7DD9A63BC3D1BBCC67FA3C3F40ED7F4CF48351618EA6034D9C13FFEBE634B2B6DD04A74FF6D52EFFEA090CDDE2CD5CF57565CC8EF742C0720686C095A83AEF826F42B229F0C20265106A87D0D28CC93FD8FBAFC956F798992B3;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: <HTML><HEAD><TITLE>Redirect to https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~D62DDEB3B3E029BE82B8B0D81CBB4D9A7AF7D8AF92E92A9D55CEBF1DE54FF54D64CAAB292AD7AC81A7273E0614C1B3D0689E2966BEF677EC6A65AF399AE1AB07A8025359603812FC2E6EFB51E1E939D47F1AA5F75192E103E64C9F84D7254E661A4858FC5937D006B514CB31B6B50D1EB42B1A42E1DEA2C277E04A7187BB5920D34626926B435C840AD55B0819F345DEF78E59F7EA7ECDF32782FF1E1D0F2248F02D4809E2DBBBF6F2EEE1967D75D9825CBC6E74DBBCFB088355A778E60E5F83A8217FADE69A384CDF9FFF32C38482301A8590C3E9F3CB87205B2648763DA57818D0C476335565E13B93E594BE48C86761E8E786B8928745EBA06182B0394DEBD8D9302E40780658A4B1B0DE3C0C25512757AF92DE93BE39F57FD6E23A579AB8CFF2E668DC3E6F9C0498AF899900A96368151D69D49DFA257CA003E741D37BB683396E551324F37DDCEBE5E106512CEE671D4ACABE7185A86B3CB217CC838DD7CAE27C0E6991749426A1BB00AE6C61C2FC8A337C9A9044DA</TITLE></HEAD><BODY><A
        HREF="https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~D62DDEB3B3E029BE82B8B0D81CBB4D9A7AF7D8AF92E92A9D55CEBF1DE54FF54D64CAAB292AD7AC81A7273E0614C1B3D0689E2966BEF677EC6A65AF399AE1AB07A8025359603812FC2E6EFB51E1E939D47F1AA5F75192E103E64C9F84D7254E661A4858FC5937D006B514CB31B6B50D1EB42B1A42E1DEA2C277E04A7187BB5920D34626926B435C840AD55B0819F345DEF78E59F7EA7ECDF32782FF1E1D0F2248F02D4809E2DBBBF6F2EEE1967D75D9825CBC6E74DBBCFB088355A778E60E5F83A8217FADE69A384CDF9FFF32C38482301A8590C3E9F3CB87205B2648763DA57818D0C476335565E13B93E594BE48C86761E8E786B8928745EBA06182B0394DEBD8D9302E40780658A4B1B0DE3C0C25512757AF92DE93BE39F57FD6E23A579AB8CFF2E668DC3E6F9C0498AF899900A96368151D69D49DFA257CA003E741D37BB683396E551324F37DDCEBE5E106512CEE671D4ACABE7185A86B3CB217CC838DD7CAE27C0E6991749426A1BB00AE6C61C2FC8A337C9A9044DA">https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~D62DDEB3B3E029BE82B8B0D81CBB4D9A7AF7D8AF92E92A9D55CEBF1DE54FF54D64CAAB292AD7AC81A7273E0614C1B3D0689E2966BEF677EC6A65AF399AE1AB07A8025359603812FC2E6EFB51E1E939D47F1AA5F75192E103E64C9F84D7254E661A4858FC5937D006B514CB31B6B50D1EB42B1A42E1DEA2C277E04A7187BB5920D34626926B435C840AD55B0819F345DEF78E59F7EA7ECDF32782FF1E1D0F2248F02D4809E2DBBBF6F2EEE1967D75D9825CBC6E74DBBCFB088355A778E60E5F83A8217FADE69A384CDF9FFF32C38482301A8590C3E9F3CB87205B2648763DA57818D0C476335565E13B93E594BE48C86761E8E786B8928745EBA06182B0394DEBD8D9302E40780658A4B1B0DE3C0C25512757AF92DE93BE39F57FD6E23A579AB8CFF2E668DC3E6F9C0498AF899900A96368151D69D49DFA257CA003E741D37BB683396E551324F37DDCEBE5E106512CEE671D4ACABE7185A86B3CB217CC838DD7CAE27C0E6991749426A1BB00AE6C61C2FC8A337C9A9044DA</A></BODY></HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~D62DDEB3B3E029BE82B8B0D81CBB4D9A7AF7D8AF92E92A9D55CEBF1DE54FF54D64CAAB292AD7AC81A7273E0614C1B3D0689E2966BEF677EC6A65AF399AE1AB07A8025359603812FC2E6EFB51E1E939D47F1AA5F75192E103E64C9F84D7254E661A4858FC5937D006B514CB31B6B50D1EB42B1A42E1DEA2C277E04A7187BB5920D34626926B435C840AD55B0819F345DEF78E59F7EA7ECDF32782FF1E1D0F2248F02D4809E2DBBBF6F2EEE1967D75D9825CBC6E74DBBCFB088355A778E60E5F83A8217FADE69A384CDF9FFF32C38482301A8590C3E9F3CB87205B2648763DA57818D0C476335565E13B93E594BE48C86761E8E786B8928745EBA06182B0394DEBD8D9302E40780658A4B1B0DE3C0C25512757AF92DE93BE39F57FD6E23A579AB8CFF2E668DC3E6F9C0498AF899900A96368151D69D49DFA257CA003E741D37BB683396E551324F37DDCEBE5E106512CEE671D4ACABE7185A86B3CB217CC838DD7CAE27C0E6991749426A1BB00AE6C61C2FC8A337C9A9044DA
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+EE5919EB0D12477495A39DD40A8740A6+7B61FBBD9A596666CBAAEF0A0911308A5C676F2E320508AF93E6FC692734B864B5AA03287DD9EDB3D84CB40124B25EE097F33B1DFDD969CB3B3AB027134C3081C6138192A6C5ED536DA88B25C5B16F4546870A47162A4A90
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=11424876096657,0)
      Content-Length:
      - '0'
      Date:
      - Mon, 27 Aug 2018 12:16:27 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwsec_app_priv.process_signon"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+70DECB8E3C714AC98450BB1DADAEED85+199E461A9D605364958280DDFEB834F0D861A27E2A3F7B6D58C788DBEF5EFF3ACD4655509F70E4477E5BE3AD6E500D15ED07931206C06063DC07A72944AA401685214B7B0D8E8A7B633A6F0D2C952ED3EB510B467BF294C6;
        path=/
      - portal_url=; expires=Mon, 01-Jan-1990 08:00:00 GMT; path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+70DECB8E3C714AC98450BB1DADAEED85+199E461A9D605364958280DDFEB834F0D861A27E2A3F7B6D58C788DBEF5EFF3ACD4655509F70E4477E5BE3AD6E500D15ED07931206C06063DC07A72944AA401685214B7B0D8E8A7B633A6F0D2C952ED3EB510B467BF294C6
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=13778518197561,0)
      Content-Length:
      - '0'
      Date:
      - Mon, 27 Aug 2018 12:16:49 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.st_login_proc.set_language"
      Set-Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; expires=Tue, 27-Aug-2019 22:16:49 GMT; path=/
      - portal=9.0.3+no-no+n+NORWAY+F77318A5BC994334848FE96EF5A0849A+FE889C33C78B2C579E141D6770DAB5C40352AE9956FA2CFCDD6A73F69684EE1382C8E59077C78F9C68E4ED2804BDBD8CAE00CA44CCE3DD74BA994F4834106DDC8FE9278F794A104C2D7D3A5F869AF19ACBC3185EA4E9BDCB;
        path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+F77318A5BC994334848FE96EF5A0849A+FE889C33C78B2C579E141D6770DAB5C40352AE9956FA2CFCDD6A73F69684EE1382C8E59077C78F9C68E4ED2804BDBD8CAE00CA44CCE3DD74BA994F4834106DDC8FE9278F794A104C2D7D3A5F869AF19ACBC3185EA4E9BDCB
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=545667;ecid=4621647924277,0)
      Date:
      - Mon, 27 Aug 2018 12:16:51 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: post
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: UTF-8
      string: p_ks_reg_medladm_action=SEARCH&p_page_search=&frm_27_v01=&frm_27_v02=&frm_27_v03=&frm_27_v04=40001062&p_mode=&f_utvalg=vis&f_informasjon=skjul&frm_27_v46=11&frm_27_v47=11&frm_27_v05=1&frm_27_v10=162&frm_27_v12=O&frm_27_v49=N&frm_27_v06=1&frm_27_v07=1034&frm_27_v48=&frm_27_v13=&frm_27_v29=0&frm_27_v40=40000993
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+F77318A5BC994334848FE96EF5A0849A+FE889C33C78B2C579E141D6770DAB5C40352AE9956FA2CFCDD6A73F69684EE1382C8E59077C78F9C68E4ED2804BDBD8CAE00CA44CCE3DD74BA994F4834106DDC8FE9278F794A104C2D7D3A5F869AF19ACBC3185EA4E9BDCB
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '310'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=16;ecid=13039783833545,0)
      Date:
      - Mon, 27 Aug 2018 12:17:00 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_medlprofil?p_cr_par=DBD1D1D8CD9CD9B1979DA36963A3B3A392E3C7CEDD97CFCE72AC609F9994D3C1D1C9DDE6B0B09CA0A0676C989694696BB19DA79BAAA9A5A29399AA9D
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+F77318A5BC994334848FE96EF5A0849A+FE889C33C78B2C579E141D6770DAB5C40352AE9956FA2CFCDD6A73F69684EE1382C8E59077C78F9C68E4ED2804BDBD8CAE00CA44CCE3DD74BA994F4834106DDC8FE9278F794A104C2D7D3A5F869AF19ACBC3185EA4E9BDCB
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=14;ecid=5119864156565,0)
      Date:
      - Mon, 27 Aug 2018 12:17:16 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_medlprofil"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
recorded_with: VCR 4.0.0
