---
http_interactions:
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/portal.wwptl_login.show_site2pstoretoken?p_cancel=http://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login&p_url=http://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (G;max-age=240+0;age=0;ecid=2855867220321,0)
      Date:
      - Tue, 30 Jun 2020 22:29:52 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwptl_login.show_site2pstoretoken"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+635B17B76E8042C39F3EA3F63ED465A0+0F1D6A946596C88F0A68CC5EAB3DE4ECE3801AAD183B359C3E1D99AFB17A4FC4D397339CF2E0FD9F22CEA183E73A82033AA5615A183963C0FC885A0F1C521F3BC8705AF62903F5B98D2E9055FE2A2E1C6FB36F8F8EC94F1F;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        <HTML>
        <HEAD>
        <meta http-equiv="refresh" content="58">
        </HEAD>
        <BODY>
        <FORM NAME="freshTokenForm">
        <INPUT TYPE="hidden" NAME="site2pstoretoken" VALUE="v1.2~C178B4ED~B35EDE6927D3A8393D0E58FD7B2AF329FD27457F18B9BB58439C58EFBB84A71313A3A0E524A90F2C07F7C54BE97AAD20F9FA0D3DAE973BBC3FB77D573AB4BC9B833F818921343BB4C3D92DE2138C9D9EF03C052BD54BBA4B78BF515322359A4DAFA20837187308E4E6CDE5B2F9BEB61E4B0032F33D31E9870923C0F3FB3F2C7C41F356B46BE4867F11117E6D299DC13806AC82CECB8472AA66D3A679789CFC67D83D84D15223966DDEE5D832017D5EE3BA6C8FC75E0DBDC1D9A3953B32AAC91F2F609622043E09C14782A35C7A952E146423CA21DD9FDC525CC1F494A4225D0A7DA5D28848737B7B4F1E92F2DDF970C5D1B2449686D43406D2A9164EB412CEA028300D60F76DAEF103975715380B219588D276D631A1E1B66708C2BC3477BAA0353CDB3323508168">
        </FORM>
        </BODY>
        </HTML>
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+635B17B76E8042C39F3EA3F63ED465A0+0F1D6A946596C88F0A68CC5EAB3DE4ECE3801AAD183B359C3E1D99AFB17A4FC4D397339CF2E0FD9F22CEA183E73A82033AA5615A183963C0FC885A0F1C521F3BC8705AF62903F5B98D2E9055FE2A2E1C6FB36F8F8EC94F1F
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=60767;ecid=9074979865066,0)
      Date:
      - Tue, 30 Jun 2020 22:29:52 GMT
      Content-Location:
      - "/servlet/page/ks_utv/st_login"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: post
    uri: https://nkflogin.kampsport.no/pls/orasso/orasso.wwsso_app_admin.ls_login
    body:
      encoding: UTF-8
      string: site2pstoretoken=v1.2~C178B4ED~B35EDE6927D3A8393D0E58FD7B2AF329FD27457F18B9BB58439C58EFBB84A71313A3A0E524A90F2C07F7C54BE97AAD20F9FA0D3DAE973BBC3FB77D573AB4BC9B833F818921343BB4C3D92DE2138C9D9EF03C052BD54BBA4B78BF515322359A4DAFA20837187308E4E6CDE5B2F9BEB61E4B0032F33D31E9870923C0F3FB3F2C7C41F356B46BE4867F11117E6D299DC13806AC82CECB8472AA66D3A679789CFC67D83D84D15223966DDEE5D832017D5EE3BA6C8FC75E0DBDC1D9A3953B32AAC91F2F609622043E09C14782A35C7A952E146423CA21DD9FDC525CC1F494A4225D0A7DA5D28848737B7B4F1E92F2DDF970C5D1B2449686D43406D2A9164EB412CEA028300D60F76DAEF103975715380B219588D276D631A1E1B66708C2BC3477BAA0353CDB3323508168&p_param=&ssousername=40001062&password=xKm75LlFgH3u
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkflogin.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '675'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Cache-Control:
      - private
      Location:
      - https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~836428372908371E7088AA8A2FEDF33AC339F1503ABBC4A6C0098247407CEA205FAC53323D87F59D4BB266FB6CDAABE5C547BB1A61B82F5A420EAB5ABA78A23F7763F746EEDAF0A1BDA6050321AE0A47E98C186F4189114151373D8809865E39C21921CCEC16A969FF68766EEDF9DEB6067E0599130E4C553D55FC3ECC6065D7A0A744AAA14A81A5ECB03E00F3AD060A714DAFC144B4252F096DA965434577D9CAE6693F744CE34A61E4B5365D038A172C8399DF1B78353F4722ED206A1BAA6D58CB073C2F78D7ED0E15FF674CF7E133609AC53E62F755B11A1E160444F19432B7575BD3798072FB0AA8A41937FE2B66DC6CA6FB7C023F17EF0AFEC2241F3115F85C96FA0A6C559FE9168CCA5D1DF8FF3F519BA9A4AC5AA7F2514E4E0FF4D81D9EDA1ACFFA2E2F2B22D3C79B41A8174DA7ABC593E072F282E9D466DC9D538F8FD0CA4C7941A3650A52D1F9E919D9F9C3D2372AE1270B9FC094AEFCC06850ABF8EB84AC8E7FAE757CE926FD625CB304F885C7A936C4BB76A3
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=553764751926,0)
      Date:
      - Tue, 30 Jun 2020 22:29:54 GMT
      Set-Cookie:
      - SSO_ID=v1.2~1~1820A9FE6DEF97EEC2F108547E546EA86E2789BE13BD2FBC1BAAF585FE12D9B757A806859AB1C50EFCA706C2DE506D92A4ECFB2F7CD9693CDADCCB66A00976EA91E15FD60C3F936F552B3AE2CE28D9549DB79B2BAD5BB1A9C04AF1EEDA2A3477640102EE9098AD7069DDF3124A549B65B6E95D96DDEDC7764038C7C564BB7DBC997292AAA6D48AC8D5BF3B3C247DEAF9731B8E5DC01A352BC69F0AD7C1C2C63E2FA6EEA0B92A5D301A34A274F3B54B2934736D84CEF7CCE30471EC6F0FDEEAC89FAFEE784014CF84532048012484F6D7B2AE6F197632209A5CBD6ABD5F1FF921158BB806BF1E702148B57F866C3C1AF891CA27760588E69B;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: <HTML><HEAD><TITLE>Redirect to https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~836428372908371E7088AA8A2FEDF33AC339F1503ABBC4A6C0098247407CEA205FAC53323D87F59D4BB266FB6CDAABE5C547BB1A61B82F5A420EAB5ABA78A23F7763F746EEDAF0A1BDA6050321AE0A47E98C186F4189114151373D8809865E39C21921CCEC16A969FF68766EEDF9DEB6067E0599130E4C553D55FC3ECC6065D7A0A744AAA14A81A5ECB03E00F3AD060A714DAFC144B4252F096DA965434577D9CAE6693F744CE34A61E4B5365D038A172C8399DF1B78353F4722ED206A1BAA6D58CB073C2F78D7ED0E15FF674CF7E133609AC53E62F755B11A1E160444F19432B7575BD3798072FB0AA8A41937FE2B66DC6CA6FB7C023F17EF0AFEC2241F3115F85C96FA0A6C559FE9168CCA5D1DF8FF3F519BA9A4AC5AA7F2514E4E0FF4D81D9EDA1ACFFA2E2F2B22D3C79B41A8174DA7ABC593E072F282E9D466DC9D538F8FD0CA4C7941A3650A52D1F9E919D9F9C3D2372AE1270B9FC094AEFCC06850ABF8EB84AC8E7FAE757CE926FD625CB304F885C7A936C4BB76A3</TITLE></HEAD><BODY><A
        HREF="https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~836428372908371E7088AA8A2FEDF33AC339F1503ABBC4A6C0098247407CEA205FAC53323D87F59D4BB266FB6CDAABE5C547BB1A61B82F5A420EAB5ABA78A23F7763F746EEDAF0A1BDA6050321AE0A47E98C186F4189114151373D8809865E39C21921CCEC16A969FF68766EEDF9DEB6067E0599130E4C553D55FC3ECC6065D7A0A744AAA14A81A5ECB03E00F3AD060A714DAFC144B4252F096DA965434577D9CAE6693F744CE34A61E4B5365D038A172C8399DF1B78353F4722ED206A1BAA6D58CB073C2F78D7ED0E15FF674CF7E133609AC53E62F755B11A1E160444F19432B7575BD3798072FB0AA8A41937FE2B66DC6CA6FB7C023F17EF0AFEC2241F3115F85C96FA0A6C559FE9168CCA5D1DF8FF3F519BA9A4AC5AA7F2514E4E0FF4D81D9EDA1ACFFA2E2F2B22D3C79B41A8174DA7ABC593E072F282E9D466DC9D538F8FD0CA4C7941A3650A52D1F9E919D9F9C3D2372AE1270B9FC094AEFCC06850ABF8EB84AC8E7FAE757CE926FD625CB304F885C7A936C4BB76A3">https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~836428372908371E7088AA8A2FEDF33AC339F1503ABBC4A6C0098247407CEA205FAC53323D87F59D4BB266FB6CDAABE5C547BB1A61B82F5A420EAB5ABA78A23F7763F746EEDAF0A1BDA6050321AE0A47E98C186F4189114151373D8809865E39C21921CCEC16A969FF68766EEDF9DEB6067E0599130E4C553D55FC3ECC6065D7A0A744AAA14A81A5ECB03E00F3AD060A714DAFC144B4252F096DA965434577D9CAE6693F744CE34A61E4B5365D038A172C8399DF1B78353F4722ED206A1BAA6D58CB073C2F78D7ED0E15FF674CF7E133609AC53E62F755B11A1E160444F19432B7575BD3798072FB0AA8A41937FE2B66DC6CA6FB7C023F17EF0AFEC2241F3115F85C96FA0A6C559FE9168CCA5D1DF8FF3F519BA9A4AC5AA7F2514E4E0FF4D81D9EDA1ACFFA2E2F2B22D3C79B41A8174DA7ABC593E072F282E9D466DC9D538F8FD0CA4C7941A3650A52D1F9E919D9F9C3D2372AE1270B9FC094AEFCC06850ABF8EB84AC8E7FAE757CE926FD625CB304F885C7A936C4BB76A3</A></BODY></HTML>
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~836428372908371E7088AA8A2FEDF33AC339F1503ABBC4A6C0098247407CEA205FAC53323D87F59D4BB266FB6CDAABE5C547BB1A61B82F5A420EAB5ABA78A23F7763F746EEDAF0A1BDA6050321AE0A47E98C186F4189114151373D8809865E39C21921CCEC16A969FF68766EEDF9DEB6067E0599130E4C553D55FC3ECC6065D7A0A744AAA14A81A5ECB03E00F3AD060A714DAFC144B4252F096DA965434577D9CAE6693F744CE34A61E4B5365D038A172C8399DF1B78353F4722ED206A1BAA6D58CB073C2F78D7ED0E15FF674CF7E133609AC53E62F755B11A1E160444F19432B7575BD3798072FB0AA8A41937FE2B66DC6CA6FB7C023F17EF0AFEC2241F3115F85C96FA0A6C559FE9168CCA5D1DF8FF3F519BA9A4AC5AA7F2514E4E0FF4D81D9EDA1ACFFA2E2F2B22D3C79B41A8174DA7ABC593E072F282E9D466DC9D538F8FD0CA4C7941A3650A52D1F9E919D9F9C3D2372AE1270B9FC094AEFCC06850ABF8EB84AC8E7FAE757CE926FD625CB304F885C7A936C4BB76A3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+635B17B76E8042C39F3EA3F63ED465A0+0F1D6A946596C88F0A68CC5EAB3DE4ECE3801AAD183B359C3E1D99AFB17A4FC4D397339CF2E0FD9F22CEA183E73A82033AA5615A183963C0FC885A0F1C521F3BC8705AF62903F5B98D2E9055FE2A2E1C6FB36F8F8EC94F1F
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=2649708792558,0)
      Content-Length:
      - '0'
      Date:
      - Tue, 30 Jun 2020 22:29:54 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwsec_app_priv.process_signon"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+3549502AA1E04DD98102DD16E4217956+656A6CC2F7507BC5A8BAB24D1711B7857B3AAEC3E24FCB1A88C9E2B7CABA7C1B45313557D9539B83F20959EADE3ABD571E2F8A62B5929BC4B83425AE4F37BD943580A28F824636DE64833FAC42B2713232EDD215D6010F1B;
        path=/
      - portal_url=; expires=Mon, 01-Jan-1990 08:00:00 GMT; path=/
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+3549502AA1E04DD98102DD16E4217956+656A6CC2F7507BC5A8BAB24D1711B7857B3AAEC3E24FCB1A88C9E2B7CABA7C1B45313557D9539B83F20959EADE3ABD571E2F8A62B5929BC4B83425AE4F37BD943580A28F824636DE64833FAC42B2713232EDD215D6010F1B
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=725563450614,0)
      Content-Length:
      - '0'
      Date:
      - Tue, 30 Jun 2020 22:30:01 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.st_login_proc.set_language"
      Set-Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; expires=Thu, 01-Jul-2021 08:30:01 GMT; path=/
      - portal=9.0.3+no-no+n+NORWAY+C3CDB9B597FD4269BFC609AFD03C5B56+CB7C3BC1AC53D0D34A5456D9130DFAB856B66672ADF0623A2DEB19A69FF977B008F32F72703EA96EE8D847A56AC2F9A2AE061267EA9E03D1ABE1254E9767276B1C175CB778CFC42084906429ED4F3302F0337234580CEC53;
        path=/
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+C3CDB9B597FD4269BFC609AFD03C5B56+CB7C3BC1AC53D0D34A5456D9130DFAB856B66672ADF0623A2DEB19A69FF977B008F32F72703EA96EE8D847A56AC2F9A2AE061267EA9E03D1ABE1254E9767276B1C175CB778CFC42084906429ED4F3302F0337234580CEC53
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=60567;ecid=8989080528713,0)
      Date:
      - Tue, 30 Jun 2020 22:30:01 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: post
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: UTF-8
      string: p_ks_reg_medladm_action=SEARCH&p_page_search=&frm_27_v01=&frm_27_v02=&frm_27_v03=&frm_27_v04=40001062&p_mode=&f_utvalg=vis&f_informasjon=skjul&frm_27_v46=11&frm_27_v47=11&frm_27_v05=1&frm_27_v10=162&frm_27_v12=O&frm_27_v49=N&frm_27_v06=1&frm_27_v07=1034&frm_27_v48=&frm_27_v13=&frm_27_v29=0&frm_27_v40=1012618
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+C3CDB9B597FD4269BFC609AFD03C5B56+CB7C3BC1AC53D0D34A5456D9130DFAB856B66672ADF0623A2DEB19A69FF977B008F32F72703EA96EE8D847A56AC2F9A2AE061267EA9E03D1ABE1254E9767276B1C175CB778CFC42084906429ED4F3302F0337234580CEC53
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '309'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=23043;ecid=4161537291327,0)
      Date:
      - Tue, 30 Jun 2020 22:30:05 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_medlprofil?p_cr_par=DBD1D1D8CD9CD9B1949DA46B699BB296DCD2D5CDD0A1CAA76EA7679F9B94D3C1D1C9DDE6B0B09A9AA0676B9896946A63B19CA39BACA2A5A29399A89E
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.7.1p83 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+C3CDB9B597FD4269BFC609AFD03C5B56+CB7C3BC1AC53D0D34A5456D9130DFAB856B66672ADF0623A2DEB19A69FF977B008F32F72703EA96EE8D847A56AC2F9A2AE061267EA9E03D1ABE1254E9767276B1C175CB778CFC42084906429ED4F3302F0337234580CEC53
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=3;ecid=794282936643,0)
      Date:
      - Tue, 30 Jun 2020 22:30:10 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_medlprofil"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.ks_ajax.main?p_class_name=inputTextFull&p_field_id=frm_48_v36&p_first_line_txt=-%20Velg%20sats%20-&p_para1=782&p_para2=undefined&p_type=4
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=1206599801368,0)
      Date:
      - Tue, 30 Jun 2020 22:30:14 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.ks_ajax.main"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+21A790668B4A4FCDB225489E77ACF64A+EA2B7CE4C9D0A32E7FFEC8FC193AA8D18102B3A68045466F30563A706F55FB18A662AFA61F060CE35CBD75BCB5578B4802BC9EF14648D76B43840A7C87252A820BBC11225A3D4346C7E34EF80FAF7D0062775B5E6D6987B1;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '<select undefined class="inputTextFull" name="frm_48_v36" id="frm_48_v36"><option
        value="-1">- Velg sats -</option><option selected value="765">Barn</option></select>

        '
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.ks_ajax.main?p_class_name=inputTextFull&p_field_id=frm_48_v37&p_first_line_txt=-%20Velg%20kontraktstype%20-&p_para1=782&p_para2=undefined&p_type=11
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=2838687374001,0)
      Date:
      - Tue, 30 Jun 2020 22:30:14 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.ks_ajax.main"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+0CBAF288F16A4B38AB430A95B31D0DBF+C89DCBCC383EB5D6B36BBF3C9F19FC78FD08657FE5668EF1E55D5DE370EADECC7630A783185C72257BACE267393FAEAAE3EC6527D94E15621333F6A852FCE102D435B1094916CFA8E340238468A7E07FE5B12381FBF3CA97;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '<select undefined class="inputTextFull" name="frm_48_v37" id="frm_48_v37"><option
        value="-1">- Velg kontraktstype -</option><option value="902">Barn</option><option
        value="1763">Barn - familie</option><option value="14105">Styre</option></select>

        '
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
recorded_with: VCR 6.0.0
