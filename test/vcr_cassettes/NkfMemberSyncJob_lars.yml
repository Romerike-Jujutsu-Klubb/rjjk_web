---
http_interactions:
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/portal.wwptl_login.show_site2pstoretoken?p_cancel=http://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login&p_url=http://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (M;max-age=240+0;age=0;ecid=9260510505181,0)
      Date:
      - Mon, 23 Sep 2019 05:46:02 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwptl_login.show_site2pstoretoken"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+97956ED7D03A4DF58FEDFA7925EA616A+E1A0473BC5868641889BED6D41CC07F0591E6AA2FD7AFF59B66FB7BD82DB0C1B80E31050F9739972FCE6E91B6F5CCEA9E84E8F8BFC33A9694C9F5821FDD5E478FEEA4E52B5420D9751BDF97567311F70EEE6EC4D871789A9;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        <HTML>
        <HEAD>
        <meta http-equiv="refresh" content="58">
        </HEAD>
        <BODY>
        <FORM NAME="freshTokenForm">
        <INPUT TYPE="hidden" NAME="site2pstoretoken" VALUE="v1.2~C178B4ED~F1DA793CE20FD4EA1D612C2EBB4B074D5EB7811799EFF2AA22839FBE7039A083AF2B571F1ED279A3FB276528339415FAEDDCDA6F7ED64D3855E0B402AB6D97AF94BB4B84535C6B82629E051371DE216259763167CFA6C7B726BA606C0A21C099A82B3622C7E02BEE1F7F2B1A81B1100727BF6C5897B27AA1695BC4185AEB0F9E511E376FB88CCF32E9834AAB46EE4C4163772384CB14C3304723DEF86BB090AE9DBFBC617EBCE9E1EB1E857BD3B847DE61D189E3CC3CDD5C82B3642F864DE3E01525A64CBC1C39C465412EC0ED37113918FDDA27F9A411C53755AC71A4E2F1DC5A5E45A7D9A4374E17DB721AC1578DF67099EA37E15B51FD0F0D28ADC4F426CAECDF464B23C0E08770EF909CC4AC06491BA64AD03905C49655752297B71E69A6">
        </FORM>
        </BODY>
        </HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:00 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+97956ED7D03A4DF58FEDFA7925EA616A+E1A0473BC5868641889BED6D41CC07F0591E6AA2FD7AFF59B66FB7BD82DB0C1B80E31050F9739972FCE6E91B6F5CCEA9E84E8F8BFC33A9694C9F5821FDD5E478FEEA4E52B5420D9751BDF97567311F70EEE6EC4D871789A9
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=522250;ecid=9312050112809,0)
      Date:
      - Mon, 23 Sep 2019 05:46:02 GMT
      Content-Location:
      - "/servlet/page/ks_utv/st_login"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:01 GMT
- request:
    method: post
    uri: https://nkflogin.kampsport.no/pls/orasso/orasso.wwsso_app_admin.ls_login
    body:
      encoding: UTF-8
      string: site2pstoretoken=v1.2~C178B4ED~F1DA793CE20FD4EA1D612C2EBB4B074D5EB7811799EFF2AA22839FBE7039A083AF2B571F1ED279A3FB276528339415FAEDDCDA6F7ED64D3855E0B402AB6D97AF94BB4B84535C6B82629E051371DE216259763167CFA6C7B726BA606C0A21C099A82B3622C7E02BEE1F7F2B1A81B1100727BF6C5897B27AA1695BC4185AEB0F9E511E376FB88CCF32E9834AAB46EE4C4163772384CB14C3304723DEF86BB090AE9DBFBC617EBCE9E1EB1E857BD3B847DE61D189E3CC3CDD5C82B3642F864DE3E01525A64CBC1C39C465412EC0ED37113918FDDA27F9A411C53755AC71A4E2F1DC5A5E45A7D9A4374E17DB721AC1578DF67099EA37E15B51FD0F0D28ADC4F426CAECDF464B23C0E08770EF909CC4AC06491BA64AD03905C49655752297B71E69A6&p_param=&ssousername=40001062&password=xKm75LlFgH3u
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkflogin.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '659'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Cache-Control:
      - private
      Location:
      - https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~8AF6F889894488E606427321597165AD9D59DB15956B9440162584CF141F393A1555CFB525C6EEA404882B7DF1C1A82D625C384319D9A1B313A2A7C27223170BC47C30B9B82FE038EB587E2FDE73E3F881743DEB75AEFCF0BA6FD0991044B5ECA2E3D25FF67A26AA932225AE2D691B90B7C662A8FCB40F1F5141E47A092D24093F35400A399AA8BCE3546DAA4547C4581AA46ECFFFE2DD862AD23FCEB12FAB03C4B70DEC0268C822403AA0984D77AE12654DF6E76B22987346394B911FBAF56A113E76ED1AFB4AB67C2EE23C8B77EF21F95DBCDD0F2F54AEDA9B950409C1DD40BFE49903C51716A78BD37CA4FA8ADEE08F6A0064E8C83376AB55D4C2A105A2018D018EA4A6A5AC4218ADDEE3BA4DAD4AFFE5B89667B1D442073BEDC4CCA99544382BC7A1F954BF99638770151C1701F823683E390D572195F7815D579C05C5C6E711D52B3A6AB1D644EC66B4AC82DABC55CB1FD237D0A6589F52B69B3A46FD4847B0E3B5A7FD1C7AEEF8E4C41E046B6E937DCDAEC828DF9183D3FEA66DDDC121
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=1151612251066,0)
      Date:
      - Mon, 23 Sep 2019 05:46:02 GMT
      Set-Cookie:
      - SSO_ID=v1.2~1~092E730ABB11CDA7F7E6F4102227F93BC7A2927CA14D4950EE5B84D2853F1827E2707272F598B283CE2DC44BC8EA765F4B699B85EF044DD25902D5CE1726A1EA9AABF71D77911E4CE539F56BFDCFE11BE52313DC81799510BD8FAB9926E028F13C70F91A6EC8713B93B0F3C30170AED5CDC0E47F4FA95653409E20C4619628D7DF47CF2180C4C81E280A3E66B611C727D4F838E710C1C47CCB381E6E4DEC0BE451D1AFF1D7CEE44AB0379856FEDF53FE378AC75769783C1BD5B59838181111A964E3222DE0E7A8668E05CDA34AD263269AA4B2C8F09AE5A6927D3BD039B97FE6DA4286E5FFC71C9733BC55BC290CC3CBE8DDB4D841A57D1CB81E33BA2F804AA4;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: <HTML><HEAD><TITLE>Redirect to https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~8AF6F889894488E606427321597165AD9D59DB15956B9440162584CF141F393A1555CFB525C6EEA404882B7DF1C1A82D625C384319D9A1B313A2A7C27223170BC47C30B9B82FE038EB587E2FDE73E3F881743DEB75AEFCF0BA6FD0991044B5ECA2E3D25FF67A26AA932225AE2D691B90B7C662A8FCB40F1F5141E47A092D24093F35400A399AA8BCE3546DAA4547C4581AA46ECFFFE2DD862AD23FCEB12FAB03C4B70DEC0268C822403AA0984D77AE12654DF6E76B22987346394B911FBAF56A113E76ED1AFB4AB67C2EE23C8B77EF21F95DBCDD0F2F54AEDA9B950409C1DD40BFE49903C51716A78BD37CA4FA8ADEE08F6A0064E8C83376AB55D4C2A105A2018D018EA4A6A5AC4218ADDEE3BA4DAD4AFFE5B89667B1D442073BEDC4CCA99544382BC7A1F954BF99638770151C1701F823683E390D572195F7815D579C05C5C6E711D52B3A6AB1D644EC66B4AC82DABC55CB1FD237D0A6589F52B69B3A46FD4847B0E3B5A7FD1C7AEEF8E4C41E046B6E937DCDAEC828DF9183D3FEA66DDDC121</TITLE></HEAD><BODY><A
        HREF="https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~8AF6F889894488E606427321597165AD9D59DB15956B9440162584CF141F393A1555CFB525C6EEA404882B7DF1C1A82D625C384319D9A1B313A2A7C27223170BC47C30B9B82FE038EB587E2FDE73E3F881743DEB75AEFCF0BA6FD0991044B5ECA2E3D25FF67A26AA932225AE2D691B90B7C662A8FCB40F1F5141E47A092D24093F35400A399AA8BCE3546DAA4547C4581AA46ECFFFE2DD862AD23FCEB12FAB03C4B70DEC0268C822403AA0984D77AE12654DF6E76B22987346394B911FBAF56A113E76ED1AFB4AB67C2EE23C8B77EF21F95DBCDD0F2F54AEDA9B950409C1DD40BFE49903C51716A78BD37CA4FA8ADEE08F6A0064E8C83376AB55D4C2A105A2018D018EA4A6A5AC4218ADDEE3BA4DAD4AFFE5B89667B1D442073BEDC4CCA99544382BC7A1F954BF99638770151C1701F823683E390D572195F7815D579C05C5C6E711D52B3A6AB1D644EC66B4AC82DABC55CB1FD237D0A6589F52B69B3A46FD4847B0E3B5A7FD1C7AEEF8E4C41E046B6E937DCDAEC828DF9183D3FEA66DDDC121">https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~8AF6F889894488E606427321597165AD9D59DB15956B9440162584CF141F393A1555CFB525C6EEA404882B7DF1C1A82D625C384319D9A1B313A2A7C27223170BC47C30B9B82FE038EB587E2FDE73E3F881743DEB75AEFCF0BA6FD0991044B5ECA2E3D25FF67A26AA932225AE2D691B90B7C662A8FCB40F1F5141E47A092D24093F35400A399AA8BCE3546DAA4547C4581AA46ECFFFE2DD862AD23FCEB12FAB03C4B70DEC0268C822403AA0984D77AE12654DF6E76B22987346394B911FBAF56A113E76ED1AFB4AB67C2EE23C8B77EF21F95DBCDD0F2F54AEDA9B950409C1DD40BFE49903C51716A78BD37CA4FA8ADEE08F6A0064E8C83376AB55D4C2A105A2018D018EA4A6A5AC4218ADDEE3BA4DAD4AFFE5B89667B1D442073BEDC4CCA99544382BC7A1F954BF99638770151C1701F823683E390D572195F7815D579C05C5C6E711D52B3A6AB1D644EC66B4AC82DABC55CB1FD237D0A6589F52B69B3A46FD4847B0E3B5A7FD1C7AEEF8E4C41E046B6E937DCDAEC828DF9183D3FEA66DDDC121</A></BODY></HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:01 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~8AF6F889894488E606427321597165AD9D59DB15956B9440162584CF141F393A1555CFB525C6EEA404882B7DF1C1A82D625C384319D9A1B313A2A7C27223170BC47C30B9B82FE038EB587E2FDE73E3F881743DEB75AEFCF0BA6FD0991044B5ECA2E3D25FF67A26AA932225AE2D691B90B7C662A8FCB40F1F5141E47A092D24093F35400A399AA8BCE3546DAA4547C4581AA46ECFFFE2DD862AD23FCEB12FAB03C4B70DEC0268C822403AA0984D77AE12654DF6E76B22987346394B911FBAF56A113E76ED1AFB4AB67C2EE23C8B77EF21F95DBCDD0F2F54AEDA9B950409C1DD40BFE49903C51716A78BD37CA4FA8ADEE08F6A0064E8C83376AB55D4C2A105A2018D018EA4A6A5AC4218ADDEE3BA4DAD4AFFE5B89667B1D442073BEDC4CCA99544382BC7A1F954BF99638770151C1701F823683E390D572195F7815D579C05C5C6E711D52B3A6AB1D644EC66B4AC82DABC55CB1FD237D0A6589F52B69B3A46FD4847B0E3B5A7FD1C7AEEF8E4C41E046B6E937DCDAEC828DF9183D3FEA66DDDC121
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+97956ED7D03A4DF58FEDFA7925EA616A+E1A0473BC5868641889BED6D41CC07F0591E6AA2FD7AFF59B66FB7BD82DB0C1B80E31050F9739972FCE6E91B6F5CCEA9E84E8F8BFC33A9694C9F5821FDD5E478FEEA4E52B5420D9751BDF97567311F70EEE6EC4D871789A9
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=12473146043521,0)
      Content-Length:
      - '0'
      Date:
      - Mon, 23 Sep 2019 05:46:03 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwsec_app_priv.process_signon"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+6AB25E04229F429DB832CF5032B5D1E6+F4185E61BC8E83A008AF08B02F7A87CF0C47E0F414D425B533BD408473EA3309C88426D129ACE5F5056D4D9317745FABCA74A3238940CC687D9154201F460873318EE9FC119534F39C32B1D66A96125DB4EB8DB1F6BBACD8;
        path=/
      - portal_url=; expires=Mon, 01-Jan-1990 08:00:00 GMT; path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:07 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+6AB25E04229F429DB832CF5032B5D1E6+F4185E61BC8E83A008AF08B02F7A87CF0C47E0F414D425B533BD408473EA3309C88426D129ACE5F5056D4D9317745FABCA74A3238940CC687D9154201F460873318EE9FC119534F39C32B1D66A96125DB4EB8DB1F6BBACD8
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=11081576646128,0)
      Content-Length:
      - '0'
      Date:
      - Mon, 23 Sep 2019 05:46:09 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.st_login_proc.set_language"
      Set-Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; expires=Tue, 22-Sep-2020 15:46:09 GMT; path=/
      - portal=9.0.3+no-no+n+NORWAY+7A54898A25FD4BFC840DC1B88EA5BE9A+51CC2CEB533069473F133EBDDB12FA5B0460A9945D257FF062F93EF23B06029C658D4A7583C458942D69B291BC14B85D9D45EFED596958D4E1B82D8A5E5C2E80A66F018BF0C6C92A2E5FA23B475E6E42C93EF30073E457ED;
        path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:08 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+7A54898A25FD4BFC840DC1B88EA5BE9A+51CC2CEB533069473F133EBDDB12FA5B0460A9945D257FF062F93EF23B06029C658D4A7583C458942D69B291BC14B85D9D45EFED596958D4E1B82D8A5E5C2E80A66F018BF0C6C92A2E5FA23B475E6E42C93EF30073E457ED
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=522424;ecid=9415129335830,0)
      Date:
      - Mon, 23 Sep 2019 05:46:10 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:10 GMT
- request:
    method: post
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: UTF-8
      string: p_ks_reg_medladm_action=SEARCH&p_page_search=&frm_27_v01=&frm_27_v02=&frm_27_v03=&frm_27_v04=40001062&p_mode=&f_utvalg=vis&f_informasjon=skjul&frm_27_v46=11&frm_27_v47=11&frm_27_v05=1&frm_27_v10=162&frm_27_v12=O&frm_27_v49=N&frm_27_v06=1&frm_27_v07=1034&frm_27_v48=&frm_27_v13=&frm_27_v29=0&frm_27_v40=40000993
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+7A54898A25FD4BFC840DC1B88EA5BE9A+51CC2CEB533069473F133EBDDB12FA5B0460A9945D257FF062F93EF23B06029C658D4A7583C458942D69B291BC14B85D9D45EFED596958D4E1B82D8A5E5C2E80A66F018BF0C6C92A2E5FA23B475E6E42C93EF30073E457ED
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '310'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=23361;ecid=12335707099784,0)
      Date:
      - Mon, 23 Sep 2019 05:46:12 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:15 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_medlprofil?p_cr_par=DBD1D1D8CD9CD9B1979DA36963A3B3A392E3C7CEDD97CFCE72AC609F9994D3C1D1C9DDE6B0B09C9CA0676D989694696CB19CAA9BADA8A5A29399AA9F
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+7A54898A25FD4BFC840DC1B88EA5BE9A+51CC2CEB533069473F133EBDDB12FA5B0460A9945D257FF062F93EF23B06029C658D4A7583C458942D69B291BC14B85D9D45EFED596958D4E1B82D8A5E5C2E80A66F018BF0C6C92A2E5FA23B475E6E42C93EF30073E457ED
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=4;ecid=3024218006366,0)
      Date:
      - Mon, 23 Sep 2019 05:46:16 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_medlprofil"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:19 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/portal.wwptl_login.show_site2pstoretoken?p_cancel=http://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login&p_url=http://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (H;max-age=240+0;age=19;ecid=10102324114744,0)
      Date:
      - Mon, 23 Sep 2019 05:46:02 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwptl_login.show_site2pstoretoken"
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        <HTML>
        <HEAD>
        <meta http-equiv="refresh" content="58">
        </HEAD>
        <BODY>
        <FORM NAME="freshTokenForm">
        <INPUT TYPE="hidden" NAME="site2pstoretoken" VALUE="v1.2~C178B4ED~F1DA793CE20FD4EA1D612C2EBB4B074D5EB7811799EFF2AA22839FBE7039A083AF2B571F1ED279A3FB276528339415FAEDDCDA6F7ED64D3855E0B402AB6D97AF94BB4B84535C6B82629E051371DE216259763167CFA6C7B726BA606C0A21C099A82B3622C7E02BEE1F7F2B1A81B1100727BF6C5897B27AA1695BC4185AEB0F9E511E376FB88CCF32E9834AAB46EE4C4163772384CB14C3304723DEF86BB090AE9DBFBC617EBCE9E1EB1E857BD3B847DE61D189E3CC3CDD5C82B3642F864DE3E01525A64CBC1C39C465412EC0ED37113918FDDA27F9A411C53755AC71A4E2F1DC5A5E45A7D9A4374E17DB721AC1578DF67099EA37E15B51FD0F0D28ADC4F426CAECDF464B23C0E08770EF909CC4AC06491BA64AD03905C49655752297B71E69A6">
        </FORM>
        </BODY>
        </HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:19 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=522269;ecid=4347067938135,0)
      Date:
      - Mon, 23 Sep 2019 05:46:21 GMT
      Content-Location:
      - "/servlet/page/ks_utv/st_login"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+7354538D95B44109A6C338B4672F7478+8D54BAA950BE620A4AC69F5762F1D758C7169359CD264DD3C525A715588078604036CA0ABC226A97F6308B18914CF14C553102C0CD26627B113C84E5392DF0B02656482ABE05172026D3536D0209E72FE6224BC5D386502F;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:20 GMT
- request:
    method: post
    uri: https://nkflogin.kampsport.no/pls/orasso/orasso.wwsso_app_admin.ls_login
    body:
      encoding: UTF-8
      string: site2pstoretoken=v1.2~C178B4ED~F1DA793CE20FD4EA1D612C2EBB4B074D5EB7811799EFF2AA22839FBE7039A083AF2B571F1ED279A3FB276528339415FAEDDCDA6F7ED64D3855E0B402AB6D97AF94BB4B84535C6B82629E051371DE216259763167CFA6C7B726BA606C0A21C099A82B3622C7E02BEE1F7F2B1A81B1100727BF6C5897B27AA1695BC4185AEB0F9E511E376FB88CCF32E9834AAB46EE4C4163772384CB14C3304723DEF86BB090AE9DBFBC617EBCE9E1EB1E857BD3B847DE61D189E3CC3CDD5C82B3642F864DE3E01525A64CBC1C39C465412EC0ED37113918FDDA27F9A411C53755AC71A4E2F1DC5A5E45A7D9A4374E17DB721AC1578DF67099EA37E15B51FD0F0D28ADC4F426CAECDF464B23C0E08770EF909CC4AC06491BA64AD03905C49655752297B71E69A6&p_param=&ssousername=40001062&password=xKm75LlFgH3u
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - nkflogin.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Content-Type:
      - application/x-www-form-urlencoded
      Content-Length:
      - '659'
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Cache-Control:
      - private
      Location:
      - https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=4123729639614,0)
      Date:
      - Mon, 23 Sep 2019 05:46:22 GMT
      Set-Cookie:
      - SSO_ID=v1.2~1~DA0931FCE64A5C958EA7A40C8FD4D2C97D4C794B03930CEC904948B9674CFF487001C1C20D989C84492DE1F05954EEAAB622F60947AB62E4F1183084A0194A6B5B5F55B23FC7B5F3D904B9A4CA9F5EFADB2F7128E002507E352F475FC1E4CC2E85420C13E59ADD35F2EE996E19A4287026D2BB63A828B599E860537FB96027336B90646300D807435D774AE690BBA69A3F0FD50A6E93FF4D629A6A4E0C1774B30BA0B6B79A8673671FEF5405827D98C7E08BF163B5258627086DEC001C283E6BF278DE3D65433C4EE4651E398B0019286689F188908BC4E4291A51A3BBAA9FFC03E51A34B69121982E6CB62BE34AB58C3465AA6C5E9211F0;
        path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: <HTML><HEAD><TITLE>Redirect to https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~C75D989143BA93F0AB1196CF12A96DB9266444F1E796AE31A21DFBDF0738DDC0C555642822BE601E6C1D9F332C3397DF5246ADBE186E420AFD831AFF2543611469AF3DB81E5DCEC9A3C5E06F6B6EF4CD4A35E05FB6154B9F00F6BC1A44B4D3538B203E370BC028D9FF29FF6ADAB16EE1BF2A88F1E13C3F96D19FB55204AF8C2CA12E374E4A9CFF4744FC445B1AAAF6ED393CD2042606D4115EA7A6BD0E18D770B03A479FE324B6B3D949D7A3C23C48644FBBBAC9AFC9B71E6312327E73D7BE2A6CD6D9E58624F040DB0B12B7863FFB846D9EBDC391B29E648D1C17EDAFF13A5448F0C6C8BC6C9DCDF93E0416B771DE31479678AFD7A09EBF47283BA06FFFA9B38EBD4351A6ECF62405D71F061716F35DD6045B1C7BA54BF9258D81FD61DC73CA4F53E31F1073FEFA42FB528B42A0DBAB50CA05FC39A537F651FDD774BFB3527E676E42734F34DDDA108A09C9F9072174DA00B54F893FD3BA951F5B63F780E39D0353D596C1CAD04D94D92B2E1C5A84BCDB94B3931985D72C</TITLE></HEAD><BODY><A
        HREF="https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~C75D989143BA93F0AB1196CF12A96DB9266444F1E796AE31A21DFBDF0738DDC0C555642822BE601E6C1D9F332C3397DF5246ADBE186E420AFD831AFF2543611469AF3DB81E5DCEC9A3C5E06F6B6EF4CD4A35E05FB6154B9F00F6BC1A44B4D3538B203E370BC028D9FF29FF6ADAB16EE1BF2A88F1E13C3F96D19FB55204AF8C2CA12E374E4A9CFF4744FC445B1AAAF6ED393CD2042606D4115EA7A6BD0E18D770B03A479FE324B6B3D949D7A3C23C48644FBBBAC9AFC9B71E6312327E73D7BE2A6CD6D9E58624F040DB0B12B7863FFB846D9EBDC391B29E648D1C17EDAFF13A5448F0C6C8BC6C9DCDF93E0416B771DE31479678AFD7A09EBF47283BA06FFFA9B38EBD4351A6ECF62405D71F061716F35DD6045B1C7BA54BF9258D81FD61DC73CA4F53E31F1073FEFA42FB528B42A0DBAB50CA05FC39A537F651FDD774BFB3527E676E42734F34DDDA108A09C9F9072174DA00B54F893FD3BA951F5B63F780E39D0353D596C1CAD04D94D92B2E1C5A84BCDB94B3931985D72C</A></BODY></HTML>
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:20 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/pls/portal/portal.wwsec_app_priv.process_signon?urlc=v1.2~
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+7354538D95B44109A6C338B4672F7478+8D54BAA950BE620A4AC69F5762F1D758C7169359CD264DD3C525A715588078604036CA0ABC226A97F6308B18914CF14C553102C0CD26627B113C84E5392DF0B02656482ABE05172026D3536D0209E72FE6224BC5D386502F
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=8985632618793,0)
      Content-Length:
      - '0'
      Date:
      - Mon, 23 Sep 2019 05:46:22 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/portal.wwsec_app_priv.process_signon"
      Set-Cookie:
      - portal=9.0.3+en-us+us+AMERICA+459CB20C5199412E907E2D9B56D90FE3+677A42000C845921457BA006CD4E29084CA2B8252C176E7088F802B798E8EF2558FC13D748C9C8644951F52D413721AD75B976DE181EB297DC4415CF80652A790051EFC6156444BC71915C8889DBA7326975E7A899C0B808;
        path=/
      - portal_url=; expires=Mon, 01-Jan-1990 08:00:00 GMT; path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:27 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.st_login_proc.set_language?ref_path=7513_ST_LOGIN_463458038
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - portal=9.0.3+en-us+us+AMERICA+459CB20C5199412E907E2D9B56D90FE3+677A42000C845921457BA006CD4E29084CA2B8252C176E7088F802B798E8EF2558FC13D748C9C8644951F52D413721AD75B976DE181EB297DC4415CF80652A790051EFC6156444BC71915C8889DBA7326975E7A899C0B808
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Location:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
      Cache-Control:
      - max-age=0
      Content-Type:
      - text/html; charset=WINDOWS-1252
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=11047216927751,0)
      Content-Length:
      - '0'
      Date:
      - Mon, 23 Sep 2019 05:46:29 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.st_login_proc.set_language"
      Set-Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; expires=Tue, 22-Sep-2020 15:46:29 GMT; path=/
      - portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33;
        path=/
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:27 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Referer:
      - https://nkfwww.kampsport.no/portal/page/portal/ks_utv/st_login
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=522443;ecid=309798688255,0)
      Date:
      - Mon, 23 Sep 2019 05:46:29 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:30 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_reg_medladm?f_informasjon=skjul&f_utvalg=vis&frm_27_v04=40001062&frm_27_v05=1&frm_27_v06=1&frm_27_v07=1034&frm_27_v10=162&frm_27_v12=O&frm_27_v15=Romerike%20Jujutsu%20Klubb&frm_27_v16=Stasjonsvn.%2017&frm_27_v17=P.b.%20157&frm_27_v18=2011&frm_27_v20=47326154&frm_27_v22=post@jujutsu.no&frm_27_v23=70350537706&frm_27_v25=http://jujutsu.no/&frm_27_v27=N&frm_27_v29=0&frm_27_v34==&frm_27_v37=-1&frm_27_v40=40000993&frm_27_v44==&frm_27_v45==&frm_27_v46=11&frm_27_v47=11&frm_27_v49=N&frm_27_v50=134002.PNG&frm_27_v53=-1&p_ks_reg_medladm_action=SEARCH&p_page_search=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=23362;ecid=9569748181121,0)
      Date:
      - Mon, 23 Sep 2019 05:46:32 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_reg_medladm"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:46:35 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.ks_reg_medladm_proc.download?p_cr_par
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Disposition:
      - attachment; filename="Medlemsliste.csv"
      Cache-Control:
      - max-age=0
      Content-Type:
      - application/mx-msdownload
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=11803131179748,0)
      Date:
      - Mon, 23 Sep 2019 05:46:36 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.ks_reg_medladm_proc.download"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        TWVkbGVtc251bW1lcjtFdHRlcm5hdm47Rm9ybmF2bjtLavhubjtBZHJlc3NlIDE7QWRyZXNzZSAyO0FkcmVzc2UgMztQb3N0bnI7U3RlZDtG+GRzZWxzZGF0bztBbGRlcjtUZWxlZm9uO1RlbGVmb24gYXJiZWlkO01vYmlsO0Vwb3N0O0Vwb3N0IGZha3R1cmE7WXJrZTtNZWRsZW1zc3RhdHVzO01lZGxlbXNrYXRlZ29yaTtNZWRsZW1za2F0ZWdvcmkgbmF2bjtLb250LnNhdHM7S29udC5iZWz4cDtLb250cmFrdHN0eXBlO0tvbnRyYWt0c2JlbPhwO1JhYmF0dDtHcmVuL1N0aWxhcnQvQXZkL1BhcnRpIC0gR3Jlbi9TdGlsYXJ0L0F2ZC9QYXJ0aTtTaXN0IGJldGFsdCBkYXRvO0JldGFsdCB0Lm8ubS4gZGF0bztBa3Rpdml0ZXRzb21y5WRlIGlkO0FrdGl2aXRldHNvbXLlZGUgbmF2bjtLbHViYiBpZDtLbHViYjtIb3ZlZG1lZGxlbSBpZDtIb3ZlZG1lZGxlbSBuYXZuO0lubm1lbGR0ZGF0bztJbm5tZWxkdOVyc2FrO1V0bWVsZHRkYXRvO1V0bWVsZHTlcnNhaztBbnRhbGwgZXRpa2V0dGVyIDE7Rm9yYnVuZHNrb250aW5nZW50O0F2dGFsZUdpcm87Rm9yZXNhdHRlO0ZvcmVzYXR0ZSBlcG9zdDtGb3Jlc2F0dGUgbW9iaWw7Rm9yZXNhdHRlIG5yIDI7Rm9yZXNhdHRlIG5yIDIgbW9iaWw7REFOLWdyYWRlcmluZ3NzZXJpZmlrYXQ7QmVsdGVmYXJnZTsNCjQwMDAwOTkzO0Jy5XRlbjtMYXJzIEVybGluZztNYW5uOztUb3JzdmVpIDhCOzsxNDcyO0ZKRUxMSEFNQVI7MjQuMDMuMTk2ODs1MTs2NzkxOTkwNjs2MzgwNzI1Mzs5MTczNTIxMDtsZWJyYXRlbkBnbWFpbC5jb207OyA7UDs3ODk7UGFzc2l2O1Bhc3NpdiBzYXRzOzA7UGFzc2l2IC0gVm9rc2VuOyAgICAgICAwOztKdWp1dHN1L0p1anV0c3UgKEluZ2VuIHN0aWxhcnRzdGlsa255dG5pbmcpL1N0cvhtbWVuIFN0b3JzZW50ZXIvVm9rc25lOzEyLjA0LjIwMTc7MzEuMDMuMjAxODsxO9hzdDsxMDM0O1JvbWVyaWtlIEp1anV0c3UgS2x1YmI7NDAwMDA5OTM7QnLldGVuIExhcnMgRXJsaW5nOzE0LjEwLjIwMDM7Ozs7OzAyLjA0LjIwMTk7Ozs7Ozs7O1N2YXJ0Ow0K
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:12 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/ks_medlprofil?p_cr_par=DBD1D1D8CD9CD9B1979DA36963A3B3A392E3C7CEDD97CFCE72AC609F9994D3C1D1C9DDE6B0B09C9CA0676D989694696CB19CAA9BADA8A5A29399AA9F
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TH;max-age=2592000+0;age=60;ecid=4707845244477,0)
      Date:
      - Mon, 23 Sep 2019 05:47:13 GMT
      Content-Location:
      - "/servlet/page/ks_utv/ks_medlprofil"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:16 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/pls/portal/myports.ks_godkjenn_medlem_proc.exceleksport?p_cr_par
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Disposition:
      - attachment; filename="Interessenter_2019-09-23.csv"
      Cache-Control:
      - max-age=0
      Content-Type:
      - application/mx-msdownload
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (N;ecid=5429399754286,0)
      Date:
      - Mon, 23 Sep 2019 05:47:17 GMT
      Content-Location:
      - "/servlet/RepositoryServlet/portal/myports.ks_godkjenn_medlem_proc.exceleksport"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        VHlwZTtFdHRlcm5hdm47Rm9ybmF2bjtG+GR0ZGF0bztBbGRlcjtQb3N0bnI7U3RlZDtBZHJlc3NlO0Vwb3N0O01vYmlsO1Jlcy5TTVM7UmVnLmRhdG87DQpFbmtlbHRtZWRsZW0gO1ppYTtZYXphYW47MDIuMDMuMjAwOTsxMDsxNDcyO0ZKRUxMSEFNQVI7TWFyY3VzIFRocmFuZXMgVmVpLCAzNzt3YXFhcy5vc2xvQGdtYWlsLmNvbTs7SjswOS4wOS4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtaaWE7WWFzaW47MTEuMTIuMjAwNzsxMTsxNDcyO0ZKRUxMSEFNQVI7TWFyY3VzIFRocmFuZXMgVmVpLCAzNzt3YXFhcy5vc2xvQGdtYWlsLmNvbTs7TjswNC4wOS4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtaYWhyb25pIDtLZXZpbjsyNS4wMS4yMDA5OzEwOzIwMTA7U1RS2E1NRU47U3T4cGVyaXZlaWVuIDM4O1BodW9uZy5haHVzMTExQGdtYWlsLmNvbTs5ODEwMTkyNztKOzAzLjA5LjIwMTk7DQpFbmtlbHRtZWRsZW0gO1phaHJvbmkgO1NlYmFzdGlhbiA7MjUuMDEuMjAwOTsxMDsyMDEwO1NUUthNTUVOO1N0+HBlcml2ZWllbiAzODtQaHVvbmcuYWh1czExMUBnbWFpbC5jb207OTgxMDE5Mjc7SjswMy4wOS4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtXYWxlZWQtU2FsZWVtIDtNb2hhbW1hZCBIYW16YTsyNy4wNC4yMDEzOzY7MjAwNjtM2FZFTlNUQUQ7TPhra2V2ZWllbiA2IEM7d2FsZWVkY2hAaG90bWFpbC5jb207OTQ3MjY1MDg7SjsxOC4wMy4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtXYWxlZWQtU2FsZWVtO01vaGFtbWFkIFJheXlhbiA7MTcuMDIuMjAxMjs3OzIwMDY7TNhWRU5TVEFEO0z4a2tldmVpZW4gNiBDO3dhbGVlZGNoQGhvdG1haWwuY29tOzk0NzI2NTA4O0o7MTguMDMuMjAxOTsNCkVua2VsdG1lZGxlbSA7VnVjZW5vdmljO01hcmlqYTswNi4wMS4yMDExOzg7MTQ3MjtGSkVMTEhBTUFSOztOZXZlbmExMjNAbGl2ZS5ubzs7SjswNS4wOS4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtUcmFuO01haTsxOS4wMi4yMDEwOzk7MjAwNDtMSUxMRVNUUthNICAgICAgICAgICAgICAgO1N0LiBPbGF2c2dhdGUgMThiIDtMaW5uX25fQGhvdG1haWwuY29tOzkxNzU5NDIxO0o7MTguMDguMjAxOTsNCkVua2VsdG1lZGxlbSA7U29sYmVyZztUaG9tYXM7MDkuMDcuMTk4NzszMjsyMDA4O0ZKRVJESU5HQlk7RmVyZ2V2ZWdlbiA0O3Rob21hc3NvbDg3QGhvdG1haWwuY29tOztKOzEyLjA2LjIwMTk7DQpFbmtlbHRtZWRsZW0gO1NvbGJha2tlbjtNYXRzIDswOC4xMS4yMDA2OzEyOzE0NzI7RkpFTExIQU1BUjs7cGZwQHR1Y2suYXM7O0o7MTkuMDkuMjAxOTsNCkVua2VsdG1lZGxlbSA7U2lob3JvdmE7RXdhOzEzLjExLjIwMTE7NzsxOTExO0ZMQVRFQlk7QmVyZ3NrYXVndmVpZW4gMjk7Qm9ndXNsYXdhLnNpaG9yb3ZhQGdtYWlsLmNvbTs0NjM0NTg2NztOOzA0LjA5LjIwMTk7DQpFbmtlbHRtZWRsZW0gO1JhbnVtO05hdGFzaGEgOzA0LjA1LjE5NzE7NDg7MTQ4MTtIQUdBTjtCcmVubmFsaWEgNDY7bmF0YXNqYS5yYUBnbWFpbC5jb207NDY5MTU4NDA7SjsyOS4wNS4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtJc21haWw7TmFqaWliIE1vaGFtbWVkOzI2LjA0LjIwMDY7MTM7MjAwNjtM2FZFTlNUQUQ7UmFnbmhpbGQgSvhsc2VucyB2ZWcgNDI7VG94b293MTEyQGhvdG1haWwuY29tOztKOzEyLjAzLjIwMTg7DQpFbmtlbHRtZWRsZW0gO0Rhbmc7THVjYXMgOzA4LjA4LjIwMTM7NjsxNDY3Ozs7VHZkYW5nQGdtYWlsLmNvbTs7SjsyNi4wOS4yMDE4Ow0KRW5rZWx0bWVkbGVtIDtDaGF1ZGhyeTtXYXFhcyBaaWE7MDguMDcuMTk3ODs0MTsxNDcyO0ZKRUxMSEFNQVI7TWFyY3VzIFRocmFuZXMgVmVpLCAzNzt3YXFhcy5vc2xvQGdtYWlsLmNvbTs0NTQwMTc1NTtOOzA0LjA5LjIwMTk7DQpFbmtlbHRtZWRsZW0gO0Jy5XRlbjtTeXZlciBGbnVnZzsyNy4wNS4yMDEzOzY7MjAxNDtCTFlTVEFETElBO0JseXN0YWRyaW5nZW4gMTAgYzthbml0YWZudWdnQGdtYWlsLmNvbTs7SjsxNi4wOC4yMDE5Ow0KRW5rZWx0bWVkbGVtIDtCYWlnO0luYWF5YTsxMy4wNi4yMDEzOzY7MjAxMztTS0pFVFRFTjs7YmFpZ0BmaXgubm87O047MDYuMDkuMjAxODsNCg==
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:16 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_page_search=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=4948363417317,0)
      Date:
      - Mon, 23 Sep 2019 05:47:17 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:16 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=432288&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=11871850699158,0)
      Date:
      - Mon, 23 Sep 2019 05:47:18 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:17 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=457788&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=825194814656,0)
      Date:
      - Mon, 23 Sep 2019 05:47:19 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:18 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=459930&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=996993507198,0)
      Date:
      - Mon, 23 Sep 2019 05:47:19 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:19 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=434532&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=3350635586140,0)
      Date:
      - Mon, 23 Sep 2019 05:47:20 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:19 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=421138&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=9123071632728,0)
      Date:
      - Mon, 23 Sep 2019 05:47:21 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:20 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=454090&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=10188223522747,0)
      Date:
      - Mon, 23 Sep 2019 05:47:21 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:21 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=460048&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=4828104337966,0)
      Date:
      - Mon, 23 Sep 2019 05:47:22 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:21 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=461773&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=12679304555804,0)
      Date:
      - Mon, 23 Sep 2019 05:47:23 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:22 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=455108&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=13435218800418,0)
      Date:
      - Mon, 23 Sep 2019 05:47:23 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:22 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=457889&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=4793744601509,0)
      Date:
      - Mon, 23 Sep 2019 05:47:24 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:23 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=460157&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=4089369965608,0)
      Date:
      - Mon, 23 Sep 2019 05:47:25 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:24 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=449493&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=9793086535291,0)
      Date:
      - Mon, 23 Sep 2019 05:47:25 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:24 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=449492&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=10308482611575,0)
      Date:
      - Mon, 23 Sep 2019 05:47:26 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PEhUTUwgZGlyPUxUUj4NCjxIRUFEPg0KPFRJVExFPmtzX2dvZGtqZW5uX21lZGxlbTwvVElUTEU+DQo8YmFzZSBocmVmPSJodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vcG9ydGFsL3Bscy9wb3J0YWwvIj4NCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9teXNvZnQvY3NzL2tzX3ByaW50LmNzcyI+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vbXlzb2Z0L2Nzcy9NeXNvZnRQb3J0bGV0X3YyLmNzcyI+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvcG9ydGFsL3BhZ2UvcG9ydGFsL2lkcl91dHYvY3NzL015c29mdFBvcnRsZXRfdjMuY3NzIj4NCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbmtmd3d3LmthbXBzcG9ydC5uby9teXNvZnQva3NfcmVnX21lZGxhZG0vY3NzL2tzX3JlZ19tZWRsYWRtLmNzcyI+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vbXlzb2Z0L2tzX2dvZGtqZW5uX21lZGxlbS9jc3Mva3NfZ29ka2plbm5fbWVkbGVtLmNzcyI+DQo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vbXlzb2Z0L2tzX21pbl9wcm9maWwvY3NzL2tzX21pbl9wcm9maWwuY3NzIj4NCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHBzOi8vbmtmd3d3LmthbXBzcG9ydC5uby9teXNvZnQva3NfbWVkbHByb2ZpbC9jc3Mva3NfbWVkbHByb2ZpbC5jc3MiPg0KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL215c29mdC9jc3MvanF1ZXJ5LXVpLTEuNy4yLmN1c3RvbTEuY3NzIj4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9teXNvZnQvYWpheC9qcXVlcnktMS4zLjIubWluLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9teXNvZnQvYWpheC9qcXVlcnktdWktMS43LjIuY3VzdG9tLm1pbi5qcyI+PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvbXlzb2Z0L2FqYXgvanF1ZXJ5LmlucHV0SGludEJveC5qcyI+PC9zY3JpcHQ+DQoNCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9wb3J0YWwvcGFnZS9wb3J0YWwvaWRyX3V0di9qcy90dy1zYWNrLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9wb3J0YWwvcGFnZS9wb3J0YWwvaWRyX3V0di9qcy91aS5kYXRlcGlja2VyLW5vLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vbmtmd3d3LmthbXBzcG9ydC5uby9teXNvZnQvanMvdGlueW1jZV80XzBfMTIvdGlueW1jZS5taW4uanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3BvcnRhbC9wYWdlL3BvcnRhbC9pZHJfdXR2L2pzL2pxdWVyeS5kdWFsTGlzdEJveC0xLjAuMS5qcyI+PC9zY3JpcHQ+DQoNCjxzdHlsZT4NCiBAbWVkaWEgcHJpbnQgew0KICAubm9QcmludCB7IGRpc3BsYXk6bm9uZTsgfQ0KIH0NCjwvc3R5bGU+DQoNCjwvSEVBRD4NCjxCT0RZIGxlZnRNYXJnaW49IjAiIHJpZ2h0TWFyZ2luPSIwIiB0b3BNYXJnaW49IjAiIG1hcmdpbmhlaWdodD0iMCIgbWFyZ2lud2lkdGg9IjAiID4NCgo8aWZyYW1lIGlkPSJwb3J0YWxJRnJhbWUiIHRpdGxlPSIiIGZyYW1lYm9yZGVyPSIwIiB3aWR0aD0iMCIgaGVpZ2h0PSIwIiBzcmM9Ii9pbWFnZXMvcG9idHJhbnMuZ2lmIj48L2lmcmFtZT48U0NSSVBUIFRZUEU9InRleHQvamF2YXNjcmlwdCIgU1JDPSJodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vcG9ydGFsL3Bscy9wb3J0YWwvUE9SVEFMLnd3c2JyX2phdmFzY3JpcHQucGFnZV9qcz9wX2xhbmd1YWdlPW4mcF92ZXJzaW9uPTEwLjEuNC4wLjAuNTk0Ij4KPCEtLSBDb21tZW50IG91dCBzY3JpcHQgZm9yIG9sZCBicm93c2VycwovLy0tPgo8L1NDUklQVD4KPFRBQkxFICBXSURUSD0iMTAwJSIgaWQ9InJnNjA0MyIgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdW1tYXJ5PSIiPjxUUiBBTElHTj0iTEVGVCI+CjxURCB2QWxpZ249InRvcCIgc3R5bGU9InBhZGRpbmc6MHB4IDBweCAwcHggMHB4OyIgd2lkdGg9IjEwMCUiPjxmb250IGNsYXNzPSJpbnBsYWNlZGlzcGxheWlkMXNpdGVpZDMzIj48SFRNTCB4bWxuczpvID0gInVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOm9mZmljZSI+DQo8UCBjbGFzcz1Nc29Ob3JtYWw+PEI+PFNQQU4gc3R5bGU9IkNPTE9SOiAjMWY0OTdkIj48L1NQQU4+PC9CPiZuYnNwOzwvUD4NCjxCTE9DS1FVT1RFIGRpcj1sdHIgc3R5bGU9Ik1BUkdJTi1SSUdIVDogMHB4Ij4NCjxQIGNsYXNzPU1zb05vcm1hbD48Qj48U1BBTiBzdHlsZT0iQ09MT1I6ICMxZjQ5N2QiPk9CUzogPC9TUEFOPlJlZ2lzdHJlcmluZyBhdiBueXR0IG1lZGxlbSBmcmEgYW5uZW4ga2x1YmI8U1BBTiBzdHlsZT0iQ09MT1I6ICMxZjQ5N2QiPjs8L1NQQU4+PG86cD48L286cD48L0I+PC9QPg0KPFAgY2xhc3M9TXNvTm9ybWFsPk55dHQgbWVkbGVtIDxGT05UIGNvbG9yPSMwMDAwMDA+PFNQQU4gc3R5bGU9IkNPTE9SOiAjMWY0OTdkIj5mcmEgYW5uZW4ga2x1YmIgPC9TUEFOPm3lIGhhIG55dHQgbWVkbGVtc251bW1lciBpIG55IGtsdWJiPFNQQU4gc3R5bGU9IkNPTE9SOiAjMWY0OTdkIj4hIDxCUj48L1NQQU4+VmVkIGV2dC4gZnVubiB2ZWQgZHVwbGlrYXRzamVrayBt5SBtZWRsZW1zbnVtbWVyIGZyYSBnYW1tZWwga2x1YmIgPFU+aWtrZTwvVT4gYmVueXR0ZXMuIDxCUj5EZXQgYmxpciBkYSBmZWlsIGkgQXZ0YWxlR2lybyB0cmVra2V0LjwvRk9OVD48L1A+PC9CTE9DS1FVT1RFPjwvZm9udD4KPC9URD48L1RSPgo8L1RBQkxFPjxUQUJMRSAgV0lEVEg9IjEwMCUiIGlkPSJyZzEwMjciICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3VtbWFyeT0iIj48L1RBQkxFPjxUQUJMRSAgV0lEVEg9IjEwMCUiIGlkPSJyZzEwMjYiICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3VtbWFyeT0iIj48VFIgQUxJR049IkxFRlQiPgo8VEQgdkFsaWduPSJ0b3AiIHN0eWxlPSJwYWRkaW5nOjBweCAwcHggMHB4IDBweDsiIHdpZHRoPSIxMDAlIj48RElWIGlkPSJwMzNfNDMyOF8zM180MTM1XzQxMzUiPgo8ZGl2IGNsYXNzPSJkaXZQb3J0bGV0IiBpZD0iZGl2XzI4X3YwMSI+Cgk8ZGl2IGNsYXNzPWRpdkZvcm0gaWQ9ImRpdl8yOF92MDIiPgoKCQoJCTxkaXYgY2xhc3M9ZGl2SGVhZGVyIGlkPSJkaXZfMjhfdjAzIj4KCQkJPHNwYW4gY2xhc3M9c3BhbkhlYWRlcj5NZWRsZW1zcmVnaXN0cmVyaW5nL0dvZGtqZW5uaW5nIGF2IGlubm1lbGRpbmdlciBmcmEgcG9ydGFsPC9zcGFuPgoJCTwvZGl2PgoJCQoKCSAgICA8ZGl2IGNsYXNzPWRpdjJDb2x1bW5zIGlkPSJkaXZfMjhfdjA1Ij4KCQk8Zm9ybSBpZD1rc19nb2RramVubl9tZWRsZW0gbmFtZT1rc19nb2RramVubl9tZWRsZW0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Imh0dHBzOi8vbmtmd3d3LmthbXBzcG9ydC5uby9wb3J0YWwvcGFnZS9wb3J0YWwva3NfdXR2L3ZlZGxfcG9ydGxldHMva3NfZ29ka2plbm5fbWVkbGVtIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NjgiIG5hbWU9ImZybV8yOF92NjgiIHZhbHVlPSJEQkQxRDA5NkNEOUNEOUIxOTQ5M0UzOThBMjlDRDlEOUQwQjA5OTg3RTE5N0Q1OUQ5NERDOTRBNTk3OUU5Njk2OTJENUQzRTFBNkM1REFENEQxQTA5OEE3OTU5QTZBNjVBQTlBQTM5QUE3QTRBMzlGOUNBMUE3QTI5RTlEQTg5OTlGQTI5QTlFOUUiPgoJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0icF9rc19nb2RramVubl9tZWRsZW1fYWN0aW9uIiBuYW1lPSJwX2tzX2dvZGtqZW5uX21lZGxlbV9hY3Rpb24iIHZhbHVlPSIiPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtXzI4X3Y2NyIgbmFtZT0iZnJtXzI4X3Y2NyIgdmFsdWU9IkRCRDFEMDk2Q0Q5Q0Q5QjE5NDkzRTM5OEEyOUNEOUQ5RDBCMDk5ODdFMTk3RDU5RDk0REM5NEE1OTc5RTk2OTY5MkQ1RDNFMUE2QzVEQUQ0RDFBMDk4QTc5NTlBNkE1OUU3Q0JFOEQ1RUNEREU1RDdDOURCQjQ5Qzk2OUNBMDk3QTRBMDkzOTU5RjZDQUZBNDlBQTdBNzcwNjU5RUFDQTI5RkFCIj4gCgkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJwX3BhZ2Vfc2VhcmNoIiBuYW1lPSJwX3BhZ2Vfc2VhcmNoIiB2YWx1ZT0iIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTAiIG5hbWU9ImZybV8yOF92NTAiIHZhbHVlPSIiPgkJCQoJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtXzI4X3YwMSIgbmFtZT0iZnJtXzI4X3YwMSIgdmFsdWU9IiI+CQkJCQkJCQkJCQkJCQkJCQkJCQkJCgkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmcm1fMjhfdjAyIiBuYW1lPSJmcm1fMjhfdjAyIiB2YWx1ZT0iIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92MDMiIG5hbWU9ImZybV8yOF92MDMiIHZhbHVlPSIiPgoJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtXzI4X3YwNCIgbmFtZT0iZnJtXzI4X3YwNCIgdmFsdWU9IjQ0OTQ5MiI+CgkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmcm1fMjhfdjA3IiBuYW1lPSJmcm1fMjhfdjA3IiB2YWx1ZT0iMTYyIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92MDUiIG5hbWU9ImZybV8yOF92MDUiIHZhbHVlPSJFIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDIiIG5hbWU9ImZybV8yOF92NDIiIHZhbHVlPSJOIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDQiIG5hbWU9ImZybV8yOF92NDQiIHZhbHVlPSJKIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDUiIG5hbWU9ImZybV8yOF92NDUiIHZhbHVlPSJKIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDYiIG5hbWU9ImZybV8yOF92NDYiIHZhbHVlPSJKIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDciIG5hbWU9ImZybV8yOF92NDciIHZhbHVlPSJKIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDgiIG5hbWU9ImZybV8yOF92NDgiIHZhbHVlPSJKIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NDkiIG5hbWU9ImZybV8yOF92NDkiIHZhbHVlPSJKIj4JCQkJCQkJCQkJCQkKCiAgICAJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTEiIG5hbWU9ImZybV8yOF92NTEiIHZhbHVlPSI3NjUiPgogICAgCTxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmcm1fMjhfdjUyIiBuYW1lPSJmcm1fMjhfdjUyIiB2YWx1ZT0iNjYyIj4JCQkKICAgIAk8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtXzI4X3Y2MCIgbmFtZT0iZnJtXzI4X3Y2MCIgdmFsdWU9IjkwMiI+CgoJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtXzI4X3Y1MyIgbmFtZT0iZnJtXzI4X3Y1MyIgdmFsdWU9IkkiPgoJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtXzI4X3Y1NCIgbmFtZT0iZnJtXzI4X3Y1NCIgdmFsdWU9IjA5Ij4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTUiIG5hbWU9ImZybV8yOF92NTUiIHZhbHVlPSIyMDE5Ij4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTYiIG5hbWU9ImZybV8yOF92NTYiIHZhbHVlPSIxIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTciIG5hbWU9ImZybV8yOF92NTciIHZhbHVlPSIxIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTgiIG5hbWU9ImZybV8yOF92NTgiIHZhbHVlPSIwIj4KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV8yOF92NTkiIG5hbWU9ImZybV8yOF92NTkiIHZhbHVlPSIxMDM0Ij4JCQkJCQkJCQkJCQkJCQkJCQkKICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZnJtXzI4X3YzNyIgaWQ9ImZybV8yOF92MzciIHZhbHVlPSIxIiAvPiAgCgkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmcm1fMjhfdjY1IiBuYW1lPSJmcm1fMjhfdjY1IiB2YWx1ZT0iUyI+CiAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJkdXBsaWthdHNqZWtrZXQiIG5hbWU9ImR1cGxpa2F0c2pla2tldCIgdmFsdWU9IkoiPgkJCQkJCQkJCQkJCgkKCQkJCQkJCQkJCQoJCQk8dGFibGUgY2xhc3M9dGFibGVGb3JtIGlkPSJ0YWJsZV8yOF92MDEiIGNlbGxwYWRkaW5nPTAgY2VsbHNwYWNpbmc9MCBib3JkZXI9MD4KCQkJCTx0ciBjbGFzcz10ckZvcm0+CgkJCQkJPHRkIGNsYXNzPXRkRm9ybT4KCQkJCQkJPGRpdiBjbGFzcz1kaXZTdWJGb3JtIGlkPSJkaXZfMjhfdjA2Ij4KCQkJCQkJCTx1bCBjbGFzcz0idWxGb3JtIj4KCQkJCQkJCQk8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MDUiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YwNV9sYmwiPlR5cGU8L2xhYmVsPgoJCQoJCQkJCQkJCQkJCQkKCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJkaXNwbGF5VGV4dEZ1bGwiIGlkPSJmcm1fMjhfdjA1IiBuYW1lPSJmcm1fMjhfdjA1IiB2YWx1ZT0iRW5rZWx0bWVkbGVtIiByZWFkb25seT4JCQkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCTwvbGk+CgkJCQkJCQkJPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjMyIiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MzJfbGJsIj5EYXRvPC9sYWJlbD4KCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJkaXNwbGF5VGV4dEZ1bGwiIGlkPSJmcm1fMjhfdjMyIiBuYW1lPSJmcm1fMjhfdjMyIiB2YWx1ZT0iMTguMDMuMjAxOSIgcmVhZG9ubHk+CQkJCQkJCQkJCgkJCQkJCQkJPC9saT4KCQkKCQkJCQoJCQkJCQkJPC91bD4KCQkJCQkJPC9kaXY+CgkJCQkJPC90ZD4KCQkJCQk8dGQgY2xhc3M9dGRGb3JtPgoJCQkJCQk8ZGl2IGNsYXNzPWRpdlN1YkZvcm0gaWQ9ImRpdl8yOF92MjIiPgoJCQkJCQkJPHVsIGNsYXNzPSJ1bEZvcm0iPgoJCQkJCQkJCTxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YwNiIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjA2X2xibCI+U3RhdHVzPC9sYWJlbD4KCQkJCQkJCQkJPHNlbGVjdCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MDYiIG5hbWU9ImZybV8yOF92MDYiIHZhbHVlPSIiIGxhbmd1YWdlPWphdmFzY3JpcHQgb25jaGFuZ2U9ImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmcm1fMjhfdjUzJykudmFsdWUgPSB0aGlzLm9wdGlvbnNbdGhpcy5zZWxlY3RlZEluZGV4XS52YWx1ZSI+CgkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSJJIiBzZWxlY3RlZD5Ja2tlIGdvZGtqZW50PC9vcHRpb24+CgkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSJHIiA+R29ka2plbnQ8L29wdGlvbj4KCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IkEiID5BdnNs5XR0PC9vcHRpb24+CgkJCQkJCQkJCTwvc2VsZWN0PgoJCQkJCQkJCTwvbGk+CgkJCQkJCQkKCQkJCQkJCTwvdWw+CgkJCQkJCTwvZGl2PgoJCQkJCTwvdGQ+CQkJCQkKCQkJCTwvdHI+CQoJCQk8L3RhYmxlPgoJCQoJCQkJCQkJCQkJCgkJPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz1kaXZIZWFkZXIgaWQ9ImRpdl8yOF92MDgiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz1zcGFuSGVhZGVyPlBlcnNvbmluZm9ybWFzam9uPC9zcGFuPgogICAgICAgIDwvZGl2PgoJCgkJCQkKICAgICAgICA8ZGl2IGNsYXNzPWRpdjJDb2x1bW5zIGlkPSJkaXZfMjhfdjA5Ij4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPXRhYmxlRm9ybSBpZD0idGFibGVfMjhfdjA0IiBjZWxscGFkZGluZz0wIGNlbGxzcGFjaW5nPTAgYm9yZGVyPTA+CiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9dHJGb3JtPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz10ZEZvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ZGl2U3ViRm9ybSBpZD0iZGl2XzI4X3YyNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InVsRm9ybSI+CgkJCQkJCQkJPCEtLSBEdXBsaWthdHNqZWtrIC0tPgoJCQkJCQkJCTxsaT4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iYnRfMjhfdjA3IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImJ0XzI4X3YwN19sYmwiPiZuYnNwOzwvbGFiZWw+CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJPGlucHV0IGNsYXNzPWlucHV0QnV0dG9uIHR5cGU9YnV0dG9uICBuYW1lPSJidF8yOF92MDciIGlkPSJidF8yOF92MDciIHZhbHVlPSJEdXBsaWthdHNqZWtrIiBsYW5ndWFnZT1qYXZhc2NyaXB0IG9uQ2xpY2s9IlNhdmUyOCgnU1RBUlREUCcpIj4KCQkJCQkJCQk8L2xpPgkJCQkJCgkJCQkJCQkKCQkJCQkJCQk8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MDgiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YwOF9sYmwiPkZvci0vbWVsbG9tbmF2biZuYnNwOzxzcGFuIGNsYXNzPSJsaUVycm9yIj4qPC9zcGFuPjwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MDgiIG5hbWU9ImZybV8yOF92MDgiIHZhbHVlPSJNb2hhbW1hZCBIYW16YSIgbWF4bGVuZ3RoPTQwPgoJCQkJCQkJCTwvbGk+CgkJCQkJCQkJPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjA5IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MDlfbGJsIj5FdHRlcm5hdm4mbmJzcDs8c3BhbiBjbGFzcz0ibGlFcnJvciI+Kjwvc3Bhbj48L2xhYmVsPgoJCQkJCQkJCQk8aW5wdXQgY2xhc3M9ImlucHV0VGV4dEZ1bGwiIGlkPSJmcm1fMjhfdjA5IiBuYW1lPSJmcm1fMjhfdjA5IiB2YWx1ZT0iV2FsZWVkLVNhbGVlbSAiICBtYXhsZW5ndGg9ODA+CgkJCQkJCQkJPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MTAiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YxMF9sYmwiPkFkcmVzc2U8L2xhYmVsPgoJCQkJCQkJCQk8aW5wdXQgY2xhc3M9ImlucHV0VGV4dEZ1bGwiIGlkPSJmcm1fMjhfdjEwIiBuYW1lPSJmcm1fMjhfdjEwIiB2YWx1ZT0iTPhra2V2ZWllbiA2IEMiICBtYXhsZW5ndGg9MzA+CgkJCQkJCQkJPC9saT4KCQkJCQkJCQkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MTEiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YxMV9sYmwiPiZuYnNwOzwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCB0YWJpbmRleD0tMSBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MTEiIG5hbWU9ImZybV8yOF92MTEiIHZhbHVlPSJM2FZFTlNUQUQiICBtYXhsZW5ndGg9MzA+CgkJCQkJCQkJPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MTIiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YxMl9sYmwiPlBvc3Ruci9zdGVkJm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJpbnB1dFRleHRRdWFydGVyIiBpZD0iZnJtXzI4X3YxMiIgbmFtZT0iZnJtXzI4X3YxMiIgdmFsdWU9IjIwMDYiIGxhbmd1YWdlPWphdmFzY3JpcHQgb25jaGFuZ2U9ImlGcmFtZUNvbS5sb2NhdGlvbi5ocmVmPSdodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vcG9ydGFsL3Bscy9wb3J0YWwvbXlwb3J0cy5teV9wdWJsaWNfZnVuY3Rpb25zLmdldF9wbl9zdGVkP3BfZmllbGRfcG5fYWxmYV9ucj1mcm1fMjhfdjEyJnBfZmllbGRfcG5fc3RlZD1mcm1fMjhfdjEzJnBfcG5fYWxmYV9ucj0nK3RoaXMudmFsdWUiIG1heGxlbmd0aD00PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdGFiaW5kZXg9Ii0xIiBjbGFzcz0iaW5wdXRUZXh0M1F1YXJ0ZXJSTyIgaWQ9ImZybV8yOF92MTMiIG5hbWU9ImZybV8yOF92MTMiIHZhbHVlPSJM2FZFTlNUQUQiIHJlYWRvbmx5PgoJCQkJCQkJCTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjE0IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MTRfbGJsIj5G+GR0IChkZC5tbS7l5eXlKSZuYnNwOzxzcGFuIGNsYXNzPSJsaUVycm9yIj4qPC9zcGFuPjwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MTQiIG5hbWU9ImZybV8yOF92MTQiIHZhbHVlPSIyNy4wNC4yMDEzIiAgbWF4bGVuZ3RoPTEwIG9uQ2hhbmdlPSJnZXRNZWRsa2F0RnJvbURhdGUodGhpcy52YWx1ZSwgJ2ZybV8yOF92MTcnLCAnZnJtXzI4X3YxNCcpOyI+CgkJCQkJCQkJPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MTUiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YxNV9sYmwiPktq+G5uJm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPHNlbGVjdCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MTUiIG5hbWU9ImZybV8yOF92MTUiIHZhbHVlPSIiPgoJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iTSIgc2VsZWN0ZWQ+TWFubjwvb3B0aW9uPgoJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iSyIgPkt2aW5uZTwvb3B0aW9uPgoJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iSSIgPlVramVudDwvb3B0aW9uPgoJCQkJCQkJCQk8L3NlbGVjdD4KCQkJCQkJCQk8L2xpPgoJCQkJCQkJCQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YxNiIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjE2X2xibCI+SPh5ZGUmbmJzcDs8c3BhbiBjbGFzcz0ibGlFcnJvciI+Kjwvc3Bhbj48L2xhYmVsPgoJCQkJCQkJCQk8aW5wdXQgY2xhc3M9ImlucHV0VGV4dEhhbGYiIGlkPSJmcm1fMjhfdjE2IiBuYW1lPSJmcm1fMjhfdjE2IiB2YWx1ZT0iMTI1IiAgIG1heGxlbmd0aD0zPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3BhblRleHQiPiBjbTwvc3Bhbj4JCQkJCQkJCQkKCQkJCQkJCQk8L2xpPgkJCQkJCQkJCgkKCQkJCQkJCQkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MTkiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YxOV9sYmwiPkplZyByZXNlcnZlcmVyIG1lZyBtb3QgcmVrbGFtZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPWNoZWNrYm94IGNsYXNzPSJpbnB1dENoZWNrYm94IiBpZD0iZnJtXzI4X3YxOSIgbmFtZT0iZnJtXzI4X3YxOSIgIENIRUNLRUQgPgkJCQkJCQkJCQoJCQkJCQkJCTwvbGk+CgkJCQkJCQkJCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjIwIiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MjBfbGJsIj5KZWcgcmVzZXJ2ZXJlciBtZWcgbW90IFNNUzwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPWNoZWNrYm94IGNsYXNzPSJpbnB1dENoZWNrYm94IiBpZD0iZnJtXzI4X3YyMCIgbmFtZT0iZnJtXzI4X3YyMCIgIENIRUNLRUQgPgoJCQkJCQkJCTwvbGk+CgkJCQkJCQk8L3VsPgoJCQkJCQk8L2Rpdj4KCQkJCQk8L3RkPgoJCQkJCTx0ZCBjbGFzcz10ZEZvcm0+CgkJCQkJCTxkaXYgY2xhc3M9ZGl2U3ViRm9ybSBpZD0iZGl2XzI4X3YwNyI+CgkJCQkJCQk8dWwgY2xhc3M9InVsRm9ybSI+CgkJCQkJCQkJPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjIxIiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MjFfbGJsIj5UZWxlZm9uIHByaXZhdDwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MjEiIG5hbWU9ImZybV8yOF92MjEiIHZhbHVlPSI0NTgwNjA3MiIgIG1heGxlbmd0aD0yNT4KCQkJCQkJCQk8L2xpPgoJCQkJCQkJCTxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YyMiIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjIyX2xibCI+VGVsZWZvbiBtb2JpbDwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MjIiIG5hbWU9ImZybV8yOF92MjIiIHZhbHVlPSI5NDcyNjUwOCIgIG1heGxlbmd0aD0yNT4KCQkJCQkJCQk8L2xpPgoJCQkJCQkJCTxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YyMyIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjIzX2xibCI+VGVsZWZvbiBhcmJlaWQ8L2xhYmVsPgoJCQkJCQkJCQk8aW5wdXQgY2xhc3M9ImlucHV0VGV4dEZ1bGwiIGlkPSJmcm1fMjhfdjIzIiBuYW1lPSJmcm1fMjhfdjIzIiB2YWx1ZT0iIiAgbWF4bGVuZ3RoPTI1PgoJCQkJCQkJCTwvbGk+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YyNCIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjI0X2xibCI+RS1wb3N0Jm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJpbnB1dFRleHRGdWxsIiBpZD0iZnJtXzI4X3YyNCIgbmFtZT0iZnJtXzI4X3YyNCIgdmFsdWU9IndhbGVlZGNoQGhvdG1haWwuY29tIiAgbWF4bGVuZ3RoPTcwPgoJCQkJCQkJCTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjI1IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MjVfbGJsIj5FLXBvc3QgZmFrdHVyYTwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MjUiIG5hbWU9ImZybV8yOF92MjUiIHZhbHVlPSJ3YWxlZWRjaEBob3RtYWlsLmNvbSIgIG1heGxlbmd0aD03MD4KCQkJCQkJCQk8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YyNiIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjI2X2xibCI+Rm9yZXNhdHRlcyBuYXZuPC9sYWJlbD4KCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJpbnB1dFRleHRGdWxsIiBpZD0iZnJtXzI4X3YyNiIgbmFtZT0iZnJtXzI4X3YyNiIgdmFsdWU9IldhbGVlZCBCZW4gU2FsZWVtIiAgbWF4bGVuZ3RoPTgwPgoJCQkJCQkJCTwvbGk+CgoKICAgICAgICAgICAgICAgIAoJCQkJCQkJCTwhLS0gZm9yZXNhdHRlczEgZXBvc3QgLS0+CQkJCQkJCQkKCQkJCQkJCQk8bGkgY2xhc3M9ImxpRm9ybSIgaWQ9ImZybV9hMjhfdjczX0xJIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtX2EyOF92NzMiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtX2EyOF92NzNfbGJsIj5FcG9zdCBmb3Jlc2F0dDwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBtYXhsZW5ndGg9IjgwIiBmcm1fYm0gY2xhc3M9ImlucHV0VGV4dEZ1bGwiIGlkPSJmcm1fYTI4X3Y3MyIgbmFtZT0iZnJtX2EyOF92NzMiIHZhbHVlPSJ3YWxlZWRjaEBob3RtYWlsLmNvbSI+CgkJCQkJCQkJPC9saT4KICAgICAgICAgICAgICAgIAoJCQkJCQkJCTxsaSBjbGFzcz0ibGlGb3JtIiBpZD0iZnJtX2EyOF92NzRfTEkiPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fYTI4X3Y3NCIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fYTI4X3Y3NF9sYmwiPk1vYmlsIGZvcmVzYXR0PC9sYWJlbD4KCQkJCQkJCQkJPGlucHV0IG1heGxlbmd0aD0iODAiICBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV9hMjhfdjc0IiBuYW1lPSJmcm1fYTI4X3Y3NCIgdmFsdWU9IjQ1ODA2MDcyIj4KCQkJCQkJCQk8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKCgkJCQkJCQkJPCEtLSBmb3Jlc2F0dGVzMiBuYXZuIC0tPgkJCQkJCQkJCgkJCQkJCQkJPGxpIGNsYXNzPSJsaUZvcm0iIGlkPSJmcm1fYTI4X3Y3Ml9MSSIgc3R5bGUgPSAicGFkZGluZy10b3A6MTBweCI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV9hMjhfdjcyIiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV9hMjhfdjcyX2xibCI+Rm9yZXNhdHQ8L2xhYmVsPgoJCQkJCQkJCQk8aW5wdXQgbWF4bGVuZ3RoPSI4MCIgIGNsYXNzPSJpbnB1dFRleHRGdWxsIiBpZD0iZnJtX2EyOF92NzIiIG5hbWU9ImZybV9hMjhfdjcyIiB2YWx1ZT0iV2FsZWVkIEJlbiBTYWxlZW0iPgoJCQkJCQkJCTwvbGk+ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCgkJCQkJCQkJPGxpIGNsYXNzPSJsaUZvcm0iIGlkPSJmcm1fYTI4X3Y3NV9MSSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV9hMjhfdjc1IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV9hMjhfdjc1X2xibCI+TW9iaWwgZm9yZXNhdHQ8L2xhYmVsPgoJCQkJCQkJCQk8aW5wdXQgbWF4bGVuZ3RoPSI4MCIgIGNsYXNzPSJpbnB1dFRleHRGdWxsIiBpZD0iZnJtX2EyOF92NzUiIG5hbWU9ImZybV9hMjhfdjc1IiB2YWx1ZT0iOTQ3MjY1MDgiPgoJCQkJCQkJCTwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCgoKCgoJCQkJCQkJCTwhLS0geXJrZSAtLT4KCQkJCQkJCQk8bGk+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MzAiIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YzMF9sYmwiPllya2U8L2xhYmVsPgoJCQkJCQkJCQk8c2VsZWN0IGNsYXNzPSJpbnB1dFRleHRGdWxsIiBuYW1lPSJmcm1fMjhfdjMwIiBpZD0iZnJtXzI4X3YzMCI+PG9wdGlvbiB2YWx1ZT0iLTEiPi0gVmVsZyB5cmtlIC08L29wdGlvbj48b3B0aW9uIHZhbHVlPSI5Ij5BcmtpdGVrdDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjgiPkJ1c3Nq5Wb4cjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjIiPkRhdGEvd2VidXR2aWtsZXI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxMyI+RWxla3RyaWtlcjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjE3Ij5Gb3RvZ3JhZjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjMiPkZ5c2lvdGVyYXBldXQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxMCI+SW5nZW5p+HIvZW50cmVwcmVu+HI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxNiI+Sm91cm5hbGlzdDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjE1Ij5KdXJpc3Q8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI0Ij5LaXJvcHJha3Rvcjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEiPkxlZ2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI3Ij5M5nJlcjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEyIj5S+HJsZWdnZXI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxOCI+U2tvbGVlbGV2L3N0dWRlbnQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxOSI+U29zaW9ub208L29wdGlvbj48b3B0aW9uIHZhbHVlPSI2Ij5TeWtlcGxlaWVyPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNSI+VGFubmxlZ2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxMSI+VPhtcmVyPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTQiPthrb25vbS9yZWduc2thcDwvb3B0aW9uPjwvc2VsZWN0PgoJCQkJCQkJCTwvbGk+CgkJCQkJCQkJPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjI5IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MjlfbGJsIj5LYW1wc3BvcnRlcmZhcmluZzwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgaWQ9ImZybV8yOF92MjkiIG5hbWU9ImZybV8yOF92MjkiIHZhbHVlPSJpbmdlbiAiICBtYXhsZW5ndGg9NTAwPgoJCQkJCQkJCTwvbGk+CQkJCQkJCQkKCQkJCQkJCQkKCQkJCQkJCTwvdWw+CgkJCQkJCTwvZGl2PgoJCQkJCTwvdGQ+CQkJCQkKCQkJCTwvdHI+CQoJCQk8L3RhYmxlPgoJCTwvZGl2PgoJCQoJCQogICAgICAgIDxkaXYgY2xhc3M9ZGl2SGVhZGVyIGlkPSJkaXZfMjhfdjIzIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9c3BhbkhlYWRlcj5NZWRsZW1zaW5mb3JtYXNqb248L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz1kaXYyQ29sdW1ucyBpZD0iZGl2XzI4X3YyNCI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz10YWJsZUZvcm0gaWQ9InRhYmxlXzI4X3YwNCIgY2VsbHBhZGRpbmc9MCBjZWxsc3BhY2luZz0wIGJvcmRlcj0wPgogICAgICAgICAgICAgICAgPHRyIGNsYXNzPXRyRm9ybT4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9dGRGb3JtPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPWRpdlN1YkZvcm0gaWQ9ImRpdl8yOF92MjciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bEZvcm0iPgoJCQkJCQkJCTwhLS0gTWVkbGVtc2thdGVnb3JpIC0tPgkJCQkJCQkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MTciIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YxN19sYmwiPk1lZGxlbXNrYXRlZ29yaSZuYnNwOzxzcGFuIGNsYXNzPSJsaUVycm9yIj4qPC9zcGFuPjwvbGFiZWw+CQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCTxzZWxlY3Qgb25DaGFuZ2U9ImFqYXhTZWxlY3QoJzQnLCAnZnJtXzI4X3YzNF9TUEFOJywgdGhpcy5vcHRpb25zW3RoaXMuc2VsZWN0ZWRJbmRleF0udmFsdWUsICdmcm1fMjhfdjM0JywgJy0gVmVsZyBzYXRzIC0nKTsgYWpheFNlbGVjdCgnMTEnLCAnZnJtXzI4X3YzNl9TUEFOJywgdGhpcy5vcHRpb25zW3RoaXMuc2VsZWN0ZWRJbmRleF0udmFsdWUsICdmcm1fMjhfdjM2JywgJy0gVmVsZyBrb250cmFrdHN0eXBlIC0nKTsiIGNsYXNzPSJpbnB1dFRleHRGdWxsIiBuYW1lPSJmcm1fMjhfdjE3IiBpZD0iZnJtXzI4X3YxNyI+PG9wdGlvbiB2YWx1ZT0iLTEiPi0gVmVsZyBrYXRlZ29yaSAtPC9vcHRpb24+PG9wdGlvbiBzZWxlY3RlZCB2YWx1ZT0iNzgyIj5CYXJuPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNzg1Ij5JbnN0cnVrdPhyPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNzg5Ij5QYXNzaXY8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI3ODciPlN0+HR0ZW1lZGxlbW1lcjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Ijc4MyI+VW5nZG9tIDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Ijc4NCI+Vm9rc25lPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNzg2Ij7GcmVzbWVkbGVtbWVyPC9vcHRpb24+PC9zZWxlY3Q+CgkJCQkJCQkJCQkJCQkJCQk8L2xpPgoJCQkJCQkJCTwhLS0gS29udGluZ2VudHNhdHMgLS0+CgkJCQkJCQkJPGxpPiAJCQkJCQkJCQoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjM0IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MzRfbGJsIj5Lb250aW5nZW50c2F0cyZuYnNwOzxzcGFuIGNsYXNzPSJsaUVycm9yIj4qPC9zcGFuPjwvbGFiZWw+CgkJCQkJCQkJCTxzcGFuIGlkPSJmcm1fMjhfdjM0X1NQQU4iPgkJCQkJCQkJCQoJCQo8c2VsZWN0IGNsYXNzPSJpbnB1dFRleHRGdWxsIiBuYW1lPSJmcm1fMjhfdjM0IiBpZD0iZnJtXzI4X3YzNCI+PG9wdGlvbiB2YWx1ZT0iLTEiPi0gVmVsZyBzYXRzIC08L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkIHZhbHVlPSI3NjUiPkJhcm4gc2F0czwvb3B0aW9uPjwvc2VsZWN0PgoKCQkJCQkJCQkJPC9zcGFuPgkJCgkJCQkJCQkJPC9saT4KCQkJCQkJCQk8IS0tIEtvbnRyYWt0c3R5cGUgLS0+CgkJCQkJCQkJPGxpPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjM2IiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92MzZfbGJsIj5Lb250cmFrdHN0eXBlJm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPHNwYW4gaWQ9ImZybV8yOF92MzZfU1BBTiI+CQo8c2VsZWN0IG9uQ2hhbmdlPSJhamF4U2VsZWN0KCcxMycsICdmcm1fMjhfdjYzJywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybV8yOF92MzYnKS5vcHRpb25zW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmcm1fMjhfdjM2Jykuc2VsZWN0ZWRJbmRleF0udmFsdWUsICdmcm1fMjhfdjYzJywgJyAnLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtXzI4X3YzNScpLnZhbHVlKTsiIGNsYXNzPSJpbnB1dFRleHRGdWxsIiBuYW1lPSJmcm1fMjhfdjM2IiBpZD0iZnJtXzI4X3YzNiI+PG9wdGlvbiB2YWx1ZT0iLTEiPi0gVmVsZyBrb250cmFrdHN0eXBlIC08L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkIHZhbHVlPSI5MDIiPkJhcm48L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxNzYzIj5CYXJuIC0gZmFtaWxpZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjE0MTA1Ij5TdHlyZTwvb3B0aW9uPjwvc2VsZWN0PgoKCQkJCQkJCQkJPC9TUEFOPgoJCQkJCQkJCTwvbGk+CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCgoJCQkJCQkJCTwhLS0gUmFiYXR0IC0tPgoJCQkJCQkJCTxsaT4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YzNSIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjM1X2xibCI+UmFiYXR0ICglKTwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBvbkNoYW5nZT0iaWYoaXNOYU4odGhpcy52YWx1ZSkgPT0gZmFsc2UgJiYgdGhpcy52YWx1ZS5pbmRleE9mKCcgJykgPT0gLTEpIHsgYWpheFNlbGVjdCgnMTMnLCAnZnJtXzI4X3Y2MycsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmcm1fMjhfdjM2Jykub3B0aW9uc1tkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtXzI4X3YzNicpLnNlbGVjdGVkSW5kZXhdLnZhbHVlLCAnZnJtXzI4X3Y2MycsICcgJywgdGhpcy52YWx1ZSk7IH0iIGNsYXNzPSJpbnB1dFRleHRRdWFydGVyIiBpZD0iZnJtXzI4X3YzNSIgbmFtZT0iZnJtXzI4X3YzNSIgdmFsdWU9IiIgbWF4bGVuZ3RoPTM+CgkJCQkJCQkJCTxpbnB1dCBvbkNsaWNrPSJpZihpc05hTih0aGlzLnZhbHVlKSA9PSBmYWxzZSAmJiB0aGlzLnZhbHVlLmluZGV4T2YoJyAnKSA9PSAtMSkgeyBhamF4U2VsZWN0KCcxMycsICdmcm1fMjhfdjYzJywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybV8yOF92MzYnKS5vcHRpb25zW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmcm1fMjhfdjM2Jykuc2VsZWN0ZWRJbmRleF0udmFsdWUsICdmcm1fMjhfdjYzJywgJyAnLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtXzI4X3YzNScpLnZhbHVlKTsgfSIgY2xhc3M9ImlucHV0QnV0dG9uIiBzdHlsZT0id2lkdGg6IDExMHB4OzsiIHR5cGU9ImJ1dHRvbiIgdmFsdWU9Ik9wcGRhdGVyIGJlbPhwIj4KCQkJCQkJCQk8L2xpPgoJCQkJCQkJCTwhLS0gTeVuZWRzYmVs+HAgLS0+CgkJCQkJCQkJPGxpPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjYzIiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92NjNfbGJsIj5N5W5lZHNiZWz4cDwvbGFiZWw+CgoJCQkJCQkJCQk8aW5wdXQgdGFiaW5kZXg9Ii0xIiBjbGFzcz0iZGlzcGxheVRleHRIYWxmIiByZWFkb25seSBpZD0iZnJtXzI4X3Y2MyIgbmFtZT0iZnJtXzI4X3Y2MyIgdmFsdWU9IktyLiAyODQiPgoJCgoJCQkJCQkJCTwvbGk+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9dGRGb3JtPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPWRpdlN1YkZvcm0gaWQ9ImRpdl8yOF92MjUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bEZvcm0iPgoJCQkJCQkJCTwhLS0gZ3Jlbi9zdGlsYXJ0IC0tPgoJCQkJCQkJCTxsaT4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YyOCIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjI4X2xibCI+R3Jlbi9zdGlsYXJ0Jm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPHNlbGVjdCBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgbmFtZT0iZnJtXzI4X3YyOCIgaWQ9ImZybV8yOF92MjgiPjxvcHRpb24gdmFsdWU9Ii0xIj4tIFZlbGcgZ3Jlbi9zdGlsYXJ0IC08L29wdGlvbj48b3B0aW9uIHZhbHVlPSI1MjUiPkFpa2lrYW4gTm9yZ2U8L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkIHZhbHVlPSI1MjQiPkp1anV0c3UgKEluZ2VuIHN0aWxhcnRzdGlsa255dG5pbmcpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iOTU0NCI+Tm9yZ2VzIEFpa2lkbyBmb3JidW5kIChOQUYpPC9vcHRpb24+PC9zZWxlY3Q+CgkJCQkJCQkJPC9saT4KCQkKCgkJCQkJCQkJPCEtLSBhdmRlbGluZyAtLT4KCQkJCQkJCQk8bGk+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImZybV8yOF92MjciIGNsYXNzPSJpbnB1dExhYmVsIiBpZD0iZnJtXzI4X3YyN19sYmwiPkF2ZGVsaW5nJm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPHNlbGVjdCBvbkNoYW5nZT0iYWpheFNlbGVjdCgnMycsICdzcGFuXzI4X3YwMicsIHRoaXMub3B0aW9uc1t0aGlzLnNlbGVjdGVkSW5kZXhdLnZhbHVlLCAnZnJtXzI4X3YzMycsICctIFZlbGcgcGFydGkgLScpIiBjbGFzcz0iaW5wdXRUZXh0RnVsbCIgbmFtZT0iZnJtXzI4X3YyNyIgaWQ9ImZybV8yOF92MjciPjxvcHRpb24gdmFsdWU9Ii0xIj4tIFZlbGcgYXZkZWxpbmcgLTwvb3B0aW9uPjxvcHRpb24gc2VsZWN0ZWQgdmFsdWU9IjQ0NCI+U3Ry+G1tZW4gU3RvcnNlbnRlcjwvb3B0aW9uPjwvc2VsZWN0PgoJCQkJCQkJCTwvbGk+CgkJCQkJCQkJPCEtLSBQYXJ0aSAtLT4JCQkJCQkJCQoJCQkJCQkJCTxsaT4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YzMyIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjMzX2xibCI+UGFydGkmbmJzcDs8c3BhbiBjbGFzcz0ibGlFcnJvciI+Kjwvc3Bhbj48L2xhYmVsPgoJCQkJCQkJCQk8c3BhbiBpZD0ic3Bhbl8yOF92MDIiPgoJCQkJCQkJCQkKCQkJCQkJCQkJCgkJCjxzZWxlY3QgY2xhc3M9ImlucHV0VGV4dEZ1bGwiIG5hbWU9ImZybV8yOF92MzMiIGlkPSJmcm1fMjhfdjMzIj48b3B0aW9uIHZhbHVlPSItMSI+LSBWZWxnIHBhcnRpIC08L29wdGlvbj48b3B0aW9uIHZhbHVlPSIyNTMyNyI+QWlraWRvIFZva3NuZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjYyODUiPkJyYXNpbGlhbnNrIEpKPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMjI3NDciPkZvcmVsZHJldHJlbmluZzwvb3B0aW9uPjxvcHRpb24gc2VsZWN0ZWQgdmFsdWU9IjY2MiI+UGFuZGE8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIyMzQwNyI+U3R5cmU8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI2NjMiPlRpZ2VyPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNjY0Ij5Wb2tzbmU8L29wdGlvbj48L3NlbGVjdD4KCgkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQk8L2xpPgoJCQkJCQkJCTwhLS0gSW5ubWVsZHQgZGF0byAobWVkbGVtKSAtLT4KCQkJCQkJCQk8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQkJCQkJCTxsYWJlbCBjbGFzcz0iaW5wdXRMYWJlbCI+RGF0byBpbm5tZWxkdCZuYnNwOzxzcGFuIGNsYXNzPSJsaUVycm9yIj4qPC9zcGFuPjwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0SGFsZiIgaWQ9ImZybV8yOF92NjQiIG5hbWU9ImZybV8yOF92NjQiIHZhbHVlPSIyMy4wOS4yMDE5Ij4KCQkJCQkJCQk8L2xpPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgkKICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KCQkJCQogICAgICAgIDxkaXYgY2xhc3M9ZGl2SGVhZGVyIGlkPSJkaXZfMjhfdjE1Ij4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9c3BhbkhlYWRlcj5GYWt0dXJhaW5mb3JtYXNqb248L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz1kaXYyQ29sdW1ucyBpZD0iZGl2XzI4X3YxNiI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz10YWJsZUZvcm0gaWQ9InRhYmxlXzI4X3YwNSIgY2VsbHBhZGRpbmc9MCBjZWxsc3BhY2luZz0wIGJvcmRlcj0wPgogICAgICAgICAgICAgICAgPHRyIGNsYXNzPXRyRm9ybT4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9dGRGb3JtPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPWRpdlN1YkZvcm0gaWQ9ImRpdl8yOF92MTciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bEZvcm0iPgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCTwhLS0gRmFrdHVyZXJpbmdzaHlwcGlnaGV0IAkJCQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YzNyIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjM3X2xibCI+RmFrdHVyZXJpbmdzaHlwcGlnaGV0Jm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgCQkJCQkJCQkJCgkJCQkJCQkJCTxzZWxlY3QgY2xhc3M9ImlucHV0VGV4dEZ1bGwiIGlkPSJmcm1fMjhfdjM3IiBuYW1lPSJmcm1fMjhfdjM3IiB2YWx1ZT0iIiBsYW5ndWFnZT1qYXZhc2NyaXB0IG9uQ2hhbmdlPSJzZXR0RGVmUGVyaW9kZTI4KHRoaXMub3B0aW9uc1t0aGlzLnNlbGVjdGVkSW5kZXhdLnZhbHVlKSI+CgkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIiID4tIFZlbGcgaHlwcGlnaGV0IC08L29wdGlvbj4JCQkJCQkJCQkKCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjEiIHNlbGVjdGVkPsVybGlnPC9vcHRpb24+CgkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyIiA+SGFsduVybGlnPC9vcHRpb24+CgkJCQkJCQkJCTwvc2VsZWN0PgkJCQkJCQkJCQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAtLT4KCQkJCQkJCQk8IS0tIE5lc3RlIGZha3R1cmFwZXJpb2RlIGtsdWJiCQkJCQkJCQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCQkJCQkJPGxhYmVsIGZvcj0iZnJtXzI4X3YzOCIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjM4X2xibCI+TmVzdGUgcGVyaW9kZSwg5XIvbW5kJm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJpbnB1dFRleHRRdWFydGVyIiBpZD0iZnJtXzI4X3YzOCIgbmFtZT0iZnJtXzI4X3YzOCIgdmFsdWU9IiIgbWF4bGVuZ3RoPTQ+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0UXVhcnRlciIgaWQ9ImZybV8yOF92MzkiIG5hbWU9ImZybV8yOF92MzkiIHZhbHVlPSI0IiBtYXhsZW5ndGg9Mj4JCQkJCQkJCQkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgoJCQkJCQkJCS0tPgogICAgICAgICAgICAgICAgCgkJCQkJCQkJPCEtLSBOZXN0ZSB0cmVuaW5nc2F2Z2lmdCAtLT4JCQkJCQkJCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaUZvcm0iPgoJCQkJCQkJCQk8bGFiZWwgZm9yPSJmcm1fMjhfdjQwIiBjbGFzcz0iaW5wdXRMYWJlbCIgaWQ9ImZybV8yOF92NDBfbGJsIj5OZXN0ZSBhdmdpZnQsIOVyL21uZCZuYnNwOzxzcGFuIGNsYXNzPSJsaUVycm9yIj4qPC9zcGFuPjwvbGFiZWw+CgkJCQkJCQkJCTxpbnB1dCBjbGFzcz0iaW5wdXRUZXh0UXVhcnRlciIgaWQ9ImZybV8yOF92NDAiIG5hbWU9ImZybV8yOF92NDAiIHZhbHVlPSIyMDE5IiBtYXhsZW5ndGg9ND4JCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJPGlucHV0IGNsYXNzPSJpbnB1dFRleHRRdWFydGVyIiBpZD0iZnJtXzI4X3Y0MSIgbmFtZT0iZnJtXzI4X3Y0MSIgdmFsdWU9IjA0IiBtYXhsZW5ndGg9Mj4JCQkJCQkJCQkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlGb3JtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZnJtXzI4X3Y2NiIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJmcm1fMjhfdjY2X2xibCI+RXIgYXZ0YWxla29udHJha3QgbW90YXR0Jm5ic3A7PHNwYW4gY2xhc3M9ImxpRXJyb3IiPio8L3NwYW4+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Y2hlY2tib3ggY2xhc3M9ImlucHV0Q2hlY2tib3giIGlkPSJmcm1fMjhfdjY2IiBuYW1lPSJmcm1fMjhfdjY2IiAgdmFsdWUgPSAiSiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgIAkJCQkJCQkJCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgoJCgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz10ZEZvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ZGl2U3ViRm9ybSBpZD0iZGl2XzI4X3YxOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InVsRm9ybSI+CgkJCQkJCQkJPCEtLSBOeSBQREYgQXZ0YWxlR2lybyAtLT4KCQkJCQkJCQk8bGk+CgkJCQkJCQkJCTxsYWJlbCBmb3I9ImJ0XzI4X3YwNSIgY2xhc3M9ImlucHV0TGFiZWwiIGlkPSJidF8yOF92MDVfbGJsIj4mbmJzcDs8L2xhYmVsPgkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCTxpbnB1dCAKIGNsYXNzPWlucHV0QnV0dG9uIHR5cGU9YnV0dG9uICBuYW1lPSJidF8yOF92MDUiIGlkPSJidF8yOF92MDUiIHZhbHVlPSJOeSBQREYgQXZ0YWxlR2lybyIgbGFuZ3VhZ2U9amF2YXNjcmlwdCBvbkNsaWNrPSJOeVBERjI4KCkiPgoJCQkJCQkJCTwvbGk+CQkJCQkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgkJCgogICAgICAgICAgICAgICAgPC90cj4JCiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCQkKCgkJICAgICAgICAgICAgICAgICAgICAgICAgCQkJCQkJCQkKCTwvZm9ybT4KICAgIAoKICAgCTwvZGl2PgoJPGRpdiBzdHlsZT0iZGlzcGxheTpub25lIj4KCQk8aWZyYW1lIEZSQU1FQk9SREVSPTAgRlJBTUVTUEFDSU5HPTAgU0NST0xMSU5HPXllcyBNQVJHSU5XSURUSD0wIGlkPWlGcmFtZUNvbSBuYW1lPWlGcmFtZUNvbSBzdHlsZT0id2lkdGg6MTAwJTtoZWlnaHQ6MjUwIiB0YWJpbmRleD0tMSA+PC9pZnJhbWU+Cgk8L2Rpdj4KCTxkaXYgY2xhc3M9ZGl2QnV0dG9uIGlkPSJkaXZfMjhfdjEwIj4KCQk8dWwgY2xhc3M9InVsRm9ybSI+CgkJCTxsaSBjbGFzcz0ibGlGb3JtIj4KCQkJCTxpbnB1dCBjbGFzcz1pbnB1dEJ1dHRvbiB0eXBlPWJ1dHRvbiAgbmFtZT0iYnRfMjhfdjAyIiBpZD0iYnRfMjhfdjAyIiB2YWx1ZT0iQXZicnl0IiBsYW5ndWFnZT1qYXZhc2NyaXB0IG9uQ2xpY2s9IlNhdmUyOCgnQ0FOQ0VMJykiPgoJCQk8L2xpPgoJCQk8bGkgY2xhc3M9ImxpRm9ybSI+CgkJCQk8aW5wdXQgYWNjZXNza2V5PSJzIiBjbGFzcz1pbnB1dEJ1dHRvbiB0eXBlPWJ1dHRvbiAgbmFtZT0iYnRfMjhfdjAxIiBpZD0iYnRfMjhfdjAxIiB2YWx1ZT0iTGFncmUiIGxhbmd1YWdlPWphdmFzY3JpcHQgb25DbGljaz0iU2F2ZTI4KCdPSycpIj4KCQkJPC9saT4JCQkKCQk8L3VsPgoJPC9kaXY+CjwvZGl2Pgo8c2NyaXB0IGxhbmd1YWdlPWphdmFzY3JpcHQ+CgkKCQlmdW5jdGlvbiBhamF4U2VsZWN0KHBfdHlwZSwgcF9lbGVtZW50X3RvX3VwZGF0ZSwgcF9wYXJhMSwgcF9maWVsZF9pZCwgcF9maXJzdF9saW5lX3R4dCkgewkKCQkJYWpheFNlbGVjdChwX3R5cGUsIHBfZWxlbWVudF90b191cGRhdGUsIHBfcGFyYTEsIHBfZmllbGRfaWQsIHBfZmlyc3RfbGluZV90eHQsICItMSIpOwoJCX0KCgkJZnVuY3Rpb24gYWpheFNlbGVjdChwX3R5cGUsIHBfZWxlbWVudF90b191cGRhdGUsIHBfcGFyYTEsIHBfZmllbGRfaWQsIHBfZmlyc3RfbGluZV90eHQsIHBfcGFyYTIpIHsJCgkJCXRyeSB7CQkJCQkJCgkJCQl2YXIgYWpheCA9IG5ldyBzYWNrKCJodHRwczovL25rZnd3dy5rYW1wc3BvcnQubm8vcG9ydGFsL3Bscy9wb3J0YWwvbXlwb3J0cy5rc19hamF4Lm1haW4iKTsKCQkJCWFqYXguc2V0VmFyKCJwX3R5cGUiLCBwX3R5cGUpOwoJCQkJYWpheC5zZXRWYXIoInBfcGFyYTEiLCBwX3BhcmExKTsKCQkJCWFqYXguc2V0VmFyKCJwX3BhcmEyIiwgcF9wYXJhMik7CQkJCgkJCQlhamF4LnNldFZhcigicF9maWVsZF9pZCIsIHBfZmllbGRfaWQpOwkJCQkJCQoJCQkJYWpheC5zZXRWYXIoInBfZmlyc3RfbGluZV90eHQiLCBwX2ZpcnN0X2xpbmVfdHh0KTsKCSBhamF4LnNldFZhcigicF9jbGFzc19uYW1lIiwgImlucHV0VGV4dEZ1bGwiKTsgCgkJCQlhamF4LmVsZW1lbnQgPSBwX2VsZW1lbnRfdG9fdXBkYXRlOwoJCQkJYWpheC5vbkNvbXBsZXRpb24gPSBmdW5jdGlvbigpIHsgCgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYWpheC5lbGVtZW50KS52YWx1ZSA9IGFqYXgucmVzcG9uc2U7CgkJCQl9CgkJCQkJYWpheC5ydW5BSkFYKCk7CgkJCQl9CgkJCQljYXRjaChleCkgewoJCQkJLyogdGhpcyBkaXNwbGF5cyBhbiBlcnJvciBtc2cgaW4gdGhlIGZpZWxkIHdoZW4gbm8gZXh0ZXJuYWwgZGF0YSBpcyBmb3VuZCAqLwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocF9lbGVtZW50X3RvX3VwZGF0ZSkudmFsdWUgPSAibm8gZGF0YSI7CgkJCX0KCQl9ICAgICAKCQogIAogICAgCmF2dGFsZWtvbnRyYWt0KCkKCgoJZnVuY3Rpb24gU2F2ZTI4KHBBY3Rpb24pIHsJCQkKCQlpZiAocEFjdGlvbiA9PSAiT0siKQoJCXsJCQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3Y1MSIpLnZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzQiKS5vcHRpb25zW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmcm1fMjhfdjM0Iikuc2VsZWN0ZWRJbmRleF0udmFsdWU7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmcm1fMjhfdjUyIikudmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3YzMyIpLm9wdGlvbnNbZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzMiKS5zZWxlY3RlZEluZGV4XS52YWx1ZTsJCQkJCgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmcm1fMjhfdjYwIikudmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3YzNiIpLm9wdGlvbnNbZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzYiKS5zZWxlY3RlZEluZGV4XS52YWx1ZTsKICAgICAgCgkJCWlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3Y1MyIpLnZhbHVlID09ICJJIikKCQkJCXsJCQkJCgkJCQlpZiAoY29uZmlybSgiVmlsIGR1IGxhZ3JlIHV0ZW4g5SBnb2RramVubmUvdW5kZXJramVubmUgbWVkbGVtc2thcGV0IikpCgkJCQkJCXsKCQkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwX2tzX2dvZGtqZW5uX21lZGxlbV9hY3Rpb24iKS52YWx1ZSA9IHBBY3Rpb247CgkJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgia3NfZ29ka2plbm5fbWVkbGVtIikuc3VibWl0KCk7CQkJCQkJCQkKCQkJCQkJfQoJCQkJfQoJCQllbHNlCgkJCQl7CgkJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBfa3NfZ29ka2plbm5fbWVkbGVtX2FjdGlvbiIpLnZhbHVlID0gcEFjdGlvbjsKCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgia3NfZ29ka2plbm5fbWVkbGVtIikuc3VibWl0KCk7CQkJCQoJCQkJfQkJCQkJCQoJCX0KCQllbHNlCgkJewoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicF9rc19nb2RramVubl9tZWRsZW1fYWN0aW9uIikudmFsdWUgPSBwQWN0aW9uOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgia3NfZ29ka2plbm5fbWVkbGVtIikuc3VibWl0KCk7CQkKCQl9Cgl9CiAgICAKICAgIGZ1bmN0aW9uIGF2dGFsZWtvbnRyYWt0KCkgewogICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3Y2NiIpLnZhbHVlID09ICJKIikKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImJ0XzI4X3YwMSIpLmRpc2FibGVkID0gZmFsc2U7CiAgICAgICAgZWxzZQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYnRfMjhfdjAxIikuZGlzYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgIH0KCglmdW5jdGlvbiBuZXh0X3BhZ2UyOChwX3BhZ2Vfc2VhcmNoKXsKCQlvRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicF9wYWdlX3NlYXJjaCIpCgkJb0ZpZWxkLnZhbHVlID0gcF9wYWdlX3NlYXJjaAoJCVNhdmUyOCgiU0VBUkNIIikKCX0KCWZ1bmN0aW9uIE55UERGMjgoKXsKCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicF9rc19nb2RramVubl9tZWRsZW1fYWN0aW9uIikudmFsdWUgPSAiUERGIjsKCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgia3NfZ29ka2plbm5fbWVkbGVtIikuc3VibWl0KCk7CQkKCX0KCQoKCgkJZnVuY3Rpb24gYWpheFNlbGVjdChwX3R5cGUsIHBfZWxlbWVudF90b191cGRhdGUsIHBfcGFyYTEsIHBfZmllbGRfaWQsIHBfZmlyc3RfbGluZV90eHQpIHsJCgkJCWFqYXhTZWxlY3QocF90eXBlLCBwX2VsZW1lbnRfdG9fdXBkYXRlLCBwX3BhcmExLCBwX2ZpZWxkX2lkLCBwX2ZpcnN0X2xpbmVfdHh0LCAiLTEiKTsKCQl9CgoJCWZ1bmN0aW9uIGFqYXhTZWxlY3QocF90eXBlLCBwX2VsZW1lbnRfdG9fdXBkYXRlLCBwX3BhcmExLCBwX2ZpZWxkX2lkLCBwX2ZpcnN0X2xpbmVfdHh0LCBwX3BhcmEyKSB7CQoJCQl0cnkgewkJCQkJCQoJCQkJdmFyIGFqYXggPSBuZXcgc2FjaygiaHR0cHM6Ly9ua2Z3d3cua2FtcHNwb3J0Lm5vL3BvcnRhbC9wbHMvcG9ydGFsL215cG9ydHMua3NfYWpheC5tYWluIik7CgkJCQlhamF4LnNldFZhcigicF90eXBlIiwgcF90eXBlKTsKCQkJCWFqYXguc2V0VmFyKCJwX3BhcmExIiwgcF9wYXJhMSk7CgkJCQlhamF4LnNldFZhcigicF9wYXJhMiIsIHBfcGFyYTIpOwkJCQoJCQkJYWpheC5zZXRWYXIoInBfZmllbGRfaWQiLCBwX2ZpZWxkX2lkKTsJCQkJCQkKCQkJCWFqYXguc2V0VmFyKCJwX2ZpcnN0X2xpbmVfdHh0IiwgcF9maXJzdF9saW5lX3R4dCk7CgkgYWpheC5zZXRWYXIoInBfY2xhc3NfbmFtZSIsICJpbnB1dFRleHRGdWxsIik7IAoJCQkJYWpheC5lbGVtZW50ID0gcF9lbGVtZW50X3RvX3VwZGF0ZTsKCQkJCWFqYXgub25Db21wbGV0aW9uID0gZnVuY3Rpb24oKSB7IAoJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGFqYXguZWxlbWVudCkudmFsdWUgPSBhamF4LnJlc3BvbnNlOwoJCQkJfQoJCQkJCWFqYXgucnVuQUpBWCgpOwoJCQkJfQoJCQkJY2F0Y2goZXgpIHsKCQkJCS8qIHRoaXMgZGlzcGxheXMgYW4gZXJyb3IgbXNnIGluIHRoZSBmaWVsZCB3aGVuIG5vIGV4dGVybmFsIGRhdGEgaXMgZm91bmQgKi8KCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBfZWxlbWVudF90b191cGRhdGUpLnZhbHVlID0gIm5vIGRhdGEiOwoJCQl9CgkJfSAgICAgCgkKCgoJZnVuY3Rpb24gZ2V0TWVkbGthdEZyb21EYXRlKHBfc3RyLCBwX3RhcmdldGZpZWxkLCBwX2lucHV0ZmllbGQpIHsKCQl2YXIgbF9hZ2U7CgkJdmFyIHJldHZhbCA9IG51bGw7CgkJdmFyIHZhbHVlcyA9IG5ldyBBcnJheSgiNzg1IiwiNzg3IiwiNzg2IiwiNzg5IiwiNzgyIiwiNzgzIiwiNzg0Iik7ICAKCQl2YXIgYWdlZnJvbSA9IG5ldyBBcnJheSgwLDAsMCwwLDYsMTAsMjUpOyAgCgkJdmFyIGFnZXRvID0gbmV3IEFycmF5KDAsMCwwLDAsOSwyNCw3NSk7CgkJICAKCQlpZiAocF9zdHIgPT0gbnVsbCB8fCBwX3N0cj09IiIpIHsKCQkJcmV0dXJuOwoJCX0KCQkgCgkJaWYoaXNEYXRlKHBfc3RyLCAvXihbMC05XXsxLDJ9KVtcLl0oWzAtOV17MSwyfSlbXC5dKFswLTldezEsNH0pJC8sIHtkOiAxLCBtOiAyLCB5OiAzfSkgPT0gMCkgewoJCQlsX2FnZSA9IGFnZShwX3N0ci5zdWJzdHIoMCwyKSwgcF9zdHIuc3Vic3RyKDMsMiksIHBfc3RyLnN1YnN0cig2LDQpKTsKCQkJCgkJCWZvcihpPTA7aTx2YWx1ZXMubGVuZ3RoO2krKykgewoJCQkJaWYobF9hZ2UgPj0gYWdlZnJvbVtpXSAmJiBsX2FnZSA8PSBhZ2V0b1tpXSkgewoJCQkJCXJldHZhbCA9IHZhbHVlc1tpXTsKCQkJCX0KCQkJfQoJCQkKCQkJaWYocmV0dmFsID09IG51bGwpIHsKCQkJCXJldHZhbCA9ICItMSI7CgkJCX0gCgoJCQl2YXIgc2VsT2JqID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocF90YXJnZXRmaWVsZCk7CgkJCXNlbE9iai52YWx1ZSA9IHJldHZhbDsKCgkJCXZhciBzZWxUcmVuaW5nc2F2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmcm1fMjhfdjE3Iik7CQkJCgkJCQoJCQlhamF4U2VsZWN0KCI0IiwgImZybV8yOF92MzRfU1BBTiIsIHJldHZhbCwgImZybV8yOF92MzQiLCAiLSBWZWxnIHNhdHMgLSIpCQkJCQoJCQlhamF4U2VsZWN0KCcxMScsICdmcm1fMjhfdjM2X1NQQU4nLCBzZWxUcmVuaW5nc2F2Zy5vcHRpb25zW3NlbFRyZW5pbmdzYXZnLnNlbGVjdGVkSW5kZXhdLnZhbHVlLCAnZnJtXzI4X3YzNicsICctIFZlbGcga29udHJha3RzdHlwZSAtJyk7CgoJCQlhamF4U2VsZWN0KCcxMycsICdmcm1fMjhfdjYzJywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybV8yOF92MzYnKS5vcHRpb25zW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmcm1fMjhfdjM2Jykuc2VsZWN0ZWRJbmRleF0udmFsdWUsICdmcm1fMjhfdjYzJywgJyAnLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3YzNSIpLnZhbHVlKTsKCQl9CgkJZWxzZSB7CgkJCWFsZXJ0KCJGZWlsIGRhdG9mb3JtYXQiKTsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocF9pbnB1dGZpZWxkKS5mb2N1cygpOwoJCX0KCX0KCglpc0RhdGUgPSBmdW5jdGlvbih5LCBtLCBkKXsgLy92MS4wCiAgICBpZih0eXBlb2YgeSA9PSAic3RyaW5nIiAmJiBtIGluc3RhbmNlb2YgUmVnRXhwICYmIGQpewogICAgICAgIGlmKCFtLnRlc3QoeSkpIHJldHVybiAxOwogICAgICAgIHkgPSBSZWdFeHBbIiQiICsgZC55XSwgbSA9IFJlZ0V4cFsiJCIgKyBkLm1dLCBkID0gUmVnRXhwWyIkIiArIGQuZF07CiAgICB9CiAgICBkID0gTWF0aC5hYnMoZCkgfHwgMCwgbSA9IE1hdGguYWJzKG0pIHx8IDAsIHkgPSBNYXRoLmFicyh5KSB8fCAwOwogICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggIT0gMyA/IDEgOiBkIDwgMSB8fCBkID4gMzEgPyAyIDogbSA8IDEgfHwgbSA+IDEyID8gMyA6IC80fDZ8OXwxMS8udGVzdChtKSAmJiBkID09IDMxID8gNCA6IG0gPT0gMiAmJiAoZCA+ICgoeSA9ICEoeSAlIDQpICYmICh5ICUgMWUyKSB8fCAhKHkgJSA0ZTIpKSA/IDI5IDogMjgpKSA/IDUgKyAhIXkgOiAwOwoJfTsKCglmdW5jdGlvbiBhZ2UocF9kYXksIHBfbW9udGgsIHBfeWVhcikKCXsKCQl2YXIgYWdlPTAsIHRkYXk9MCwgdG1vPTAsIHR5cj0wOwoJCXZhciBub3cgPSBuZXcgRGF0ZSgpOwoJCXRkYXkgPSBub3cuZ2V0RGF0ZSgpOwoJCXRtbz0obm93LmdldE1vbnRoKCkpOwoJCXR5cj0obm93LmdldEZ1bGxZZWFyKCkpOwoJCXsKCQkJaWYoKHRtbyA+IHBfbW9udGgpfHwodG1vPT1wX21vbnRoICYgdGRheT49cF9kYXkpKSB7CgkJCQlhZ2U9cF95ZWFyOwoJCQl9CgkJCWVsc2UgewoJCQkJYWdlPXBhcnNlSW50KHBfeWVhcikrMTsKCQkJfQoJCQkKCQkJcmV0dXJuIHR5ci1hZ2U7CgkJfQoJfQoJCglmdW5jdGlvbiBzZXR0RGVmUGVyaW9kZTI4KHBfaHlwcGlnaGV0KQoJewoJCXZhciB2X2RhZ2Vuc19tbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3Y1NCIpLnZhbHVlOwoJCXZhciB2X2RhZ2Vuc19hYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3Y1NSIpLnZhbHVlOwoJCQkKCQkvLyDFcmxpZyBiZXRhaWxuZwkKCQlpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzciKS52YWx1ZSA9PSAxKSB7CQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3YzOCIpLnZhbHVlID0gdl9kYWdlbnNfYWFyOwkJCQoJCQkvLyBO5XIgZGV0IGVyIOVybGlnIGJldGFsaW5nIGVyIDAyIGRldCBlbmVzdGUgZ3lsZGlnZSB2YWxnZXQJCQkJCQkJCQkKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzkiKS52YWx1ZSA9ICIwMiI7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmcm1fMjhfdjM5IikucmVhZE9ubHkgPSB0cnVlOwkJCQkJIAkJCQoJCX0KCQkvLyBIYWx25XJsaWcgYmV0YWxpbmcKCQllbHNlIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3YzNyIpLnZhbHVlID09IDIpCgkJewkJCQkJCQkJCQkKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzkiKS5yZWFkT25seSA9IGZhbHNlOwkJCgkJCWlmICh2X2RhZ2Vuc19tbmQgPD02KSB7CgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnJtXzI4X3YzOSIpLnZhbHVlID0gIjAyIjsJCQkJIAoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzgiKS52YWx1ZSA9IHZfZGFnZW5zX2FhcjsgIAkJCQkJCgkJCX0JCgkJCWVsc2UgIHsJCQkKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmcm1fMjhfdjM5IikudmFsdWUgPSAiMDgiOwoJCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZybV8yOF92MzgiKS52YWx1ZSA9IHZfZGFnZW5zX2FhcjsJCQkJCgkJCX0JCQkKCQl9CQoJfQoJCiAgICBmdW5jdGlvbiBzb2tfcGVyc29uMjgocF9jcl9wYXIpIHsKCQlzU2V0dGluZyA9ICJ3aWR0aD02MjAsIgoJCXNTZXR0aW5nID0gc1NldHRpbmcgKyAiaGVpZ2h0PTYwMCIKCQl3aW5kb3cub3BlbigiaHR0cHM6Ly9ua2Z3d3cua2FtcHNwb3J0Lm5vL3BvcnRhbC9wYWdlL3BvcnRhbC9rc191dHYva3Nfc29rX3BlcnNvbj9wX2NyX3Bhcj0iICsgcF9jcl9wYXIsIiIsc1NldHRpbmcpCgl9CSAJCQkJCQkJCQkJIAkgCjwvc2NyaXB0PgoKPC9ESVY+PC9URD48L1RSPgo8L1RBQkxFPjxUQUJMRSAgV0lEVEg9IjEwMCUiIGlkPSJyZzEwMjUiICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3VtbWFyeT0iIj48L1RBQkxFPjwhLS0tLS0gc2hvdyBmb290ZXIgdGVtcGxhdGUgPSAxMTAyNjE2NjIxIC0tLS0tPgoNCjwvQk9EWT4NCjwvSFRNTD4KPCEtLSBQYWdlIE1ldGFkYXRhIEdlbmVyYXRlZCBPbjogMTgtU0VQLTIwMTk6MjM6NDA6MjkgIFRpbWUgVGFrZW46IDQyMCBtc2VjcyAtLT4K
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:25 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=459876&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=5102982249497,0)
      Date:
      - Mon, 23 Sep 2019 05:47:27 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:26 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=459877&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=12318527307402,0)
      Date:
      - Mon, 23 Sep 2019 05:47:27 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:26 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=460549&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=4690665390242,0)
      Date:
      - Mon, 23 Sep 2019 05:47:28 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:27 GMT
- request:
    method: get
    uri: https://nkfwww.kampsport.no/portal/page/portal/ks_utv/vedl_portlets/ks_godkjenn_medlem?frm_28_v04=459929&p_cr_par=DBD1D096CD9CD9B19493E398A29CD9D9D0B09987E197D59D94DC94A5979E969692D5D3E1A6C5DAD4D1A098A7959A6A65AA9AA39AA7A4A39F9CA1A7A29E9DA8999FA29A9E9E&p_ks_godkjenn_medlem_action=UPDATE
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.6.3p62 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - NLS_LANGUAGE=no-no%2Bn%2BNORWAY; portal=9.0.3+no-no+n+NORWAY+20C010931D4A49BBAECCAF60366E5CA2+14D059DC4BE85F7309E426D8C9A413341B96FEE5D94B548E9988818D61D82FD34E3611170F754EE0A5FCFBF7CC80FDE22AF26B41DCED09A9DF7A12690490C5FE1371276464EE9EB505B5833C96968254E902CD8223FF6D33
      Host:
      - nkfwww.kampsport.no
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=windows-1252
      Cache-Control:
      - max-age=0
      Connection:
      - Keep-Alive
      Keep-Alive:
      - timeout=5, max=999
      Server:
      - Oracle-Application-Server-10g/10.1.2.0.2 Oracle-HTTP-Server OracleAS-Web-Cache-10g/10.1.2.0.2
        (TM;max-age=2592000+0;age=0;ecid=12301347439486,0)
      Date:
      - Mon, 23 Sep 2019 05:47:28 GMT
      Content-Location:
      - "/servlet/page/ks_utv/vedl_portlets/ks_godkjenn_medlem"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 17 Oct 2013 16:47:28 GMT
recorded_with: VCR 5.0.0
