ruby:
  next_practice = group.next_practice
  selected_practice = (@practice&.group_schedule&.group_id == group.id && @practice) || next_practice
  signups = Signup.for_group(group).to_a.map(&:user)
  instructors = selected_practice.group_semester&.group_instructors.to_a.map(&:member).map(&:user).uniq
  group_members = group.users.includes(:card_key, member: {graduates: [:graduation, :rank]}).merge(Member.active(selected_practice.date)).to_a
  group_members += Attendance.joins(:practice).after(2.months.ago)
                             .where(practices: {group_schedule_id: group.group_schedules.map(&:id)})
                             .where(status: Attendance::PRESENCE_STATES)
                             .where.not(user_id: group_members.map(&:id))
                             .map(&:user).uniq
  group_members -= signups
  group_members -= instructors
  group_members = group_members.sort_by { |u| [u.current_rank, u.birthdate, u.name] }.reverse
  attending, absent = group_members.partition{|u| u.attending?}
  absent, passive = absent.partition{|u| u.member&.active?}
.card-deck
  - trial_members = NkfMemberTrial.for_group(group).to_a.reject(&:signup)
  - if trial_members.any?
    .card
      h3.card-header Prøvemedlemmer (#{trial_members.size})
      .card-body.pt-3
        table.table.mb-0 class=('table-sm' if trial_members.size > 12)
          - trial_members.each do |tm|
            tr class=(tm.created_at < 4.weeks.ago ? 'table-danger' : tm.created_at < 2.weeks.ago ? 'table-warning' : nil)
              td: a href=(tm.signup ? signup_path(tm.signup) : nkf_member_trial_path(tm)) = tm.name
                td.text-nowrap = tm.created_at.to_date
  - if signups.any?
    .card
      h3.card-header.pr-2
        span.flex-grow-1 Prøvemedlemmer
      = render 'user_list', users: signups, selected_practice: selected_practice
  .card
    .card-header.px-2
      - practice_options = group.practices.after(2.month.ago).select { |pr| pr.date <= next_practice.date }.sort_by(&:date).reverse.map { |pr| [pr.to_s(group: false, weekday: true, time: false), pr.id] }
      .input-group
        = select nil, :practice_id, practice_options, { selected: selected_practice.id }, class: 'form-control pr-0 flex-grow-1',
              onchange: "load_tab($(this).closest('.tab-pane'), '#{attendance_group_path(group)}?practice_id=' + $(this).val())"
        .input-group-append
          = link_to('Liste', attendance_form_path(year: selected_practice.date.year, month: selected_practice.date.month, group_id: group.id), class: 'btn btn-secondary',
                  onclick: "$(this).html('<i class=\"fas fa-circle-notch fa-fw mx-2\"></i>')")
    = render 'user_list', users: attending, selected_practice: selected_practice
  - if instructors.any?
    .card
      h3.card-header.pr-2
        span.flex-grow-1 Instruktører
        a.btn.btn-primary.float-right href=with_detour(new_attendance_path(attendance: { practice_id: @practice&.id }))
          i.fa.fa-plus
      = render 'user_list', users: instructors, selected_practice: selected_practice
  - if absent.any?
    .card
      h3.card-header.pr-2
        span.flex-grow-1 Fraværende
      = render 'user_list', users: absent, selected_practice: selected_practice
  - if passive.any?
    .card
      h3.card-header.pr-2
        span.flex-grow-1 Passive
      = render 'user_list', users: passive, selected_practice: selected_practice
