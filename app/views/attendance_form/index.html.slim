/ https://stackoverflow.com/a/52634662/658690
css:
  .card-deck {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    grid-gap: .5rem;
  }

a.btn.btn-primary.float-right href=with_detour(new_attendance_path(attendance: {practice_id: @practice&.id}))
  i.fa.fa-plus>
  .d-none.d-sm-inline Nytt oppmøte

h1 Oppmøte

ul#tab.nav.nav-tabs role="tablist"
  - @my_groups.each do |group|
    li.nav-item
      a.nav-link id="instruction_#{group.id}-tab" class=(:active if @practice&.group_schedule&.group_id == group.id) data-toggle="tab" data-target="#instruction_#{group.id}" role="tab" aria-controls="home" aria-selected="true" = group.name
  li.nav-item
    a#lists-tab.nav-link class=(:active unless @practice) data-toggle="tab" data-target="#lists" role="tab" aria-controls="contact" aria-selected="false" Lister

#tabContent.tab-content
  - @my_groups.each do |group|
    .tab-pane.fade id="instruction_#{group.id}" class=('show active' if @practice&.group_schedule&.group_id == group.id) role="tabpanel" aria-labelledby="home-tab"
      = render 'group', group: group

  #lists.tab-pane.fade class=('show active' unless @practice) role="tabpanel" aria-labelledby="contact-tab"
    - start_date = Date.parse('2009-08-01')
    - months = (Date.current.year - start_date.year) * 12 + Date.current.mon - start_date.mon + 1
    form
      table.table
        tbody
          - for group in @groups
            - options = (0..months).map { |i| ["#{month_name(1 + (7 + i) % 12).capitalize} #{2009 + (8 + i) / 12}", attendance_form_path(year: (start_date + i.months).year, month: (start_date + i.months).month, group_id: group.id)] }.reverse
            tr
              td: label = group.name
              td = select :group_name, group.name, options, {prompt: 'Velg måned'}, onchange: 'document.location = options[selectedIndex].value', class: 'form-control'
          tr
            td
            td = link_to 'Andre', attendance_form_path(year: Time.current.year, month: Time.current.mon, group_id: 'others'), class: 'btn btn-secondary'

css:
  .card-header {
      display: flex;
  }
  select ~ .status-badge {
      font-size:89.5%;
  }
- states = (@practice&.passed? ? Attendance::PAST_STATES : @practice&.imminent? ? Attendance::CURRENT_STATES : Attendance::STATES)
- attendance_state_text = (states[Attendance::Status::ATTENDED] || states[Attendance::Status::WILL_ATTEND])[0]
javascript:
  function updateBadges() {
    let closestCard = $(this).closest('.card');
    if (closestCard.length > 0) {
      cards = closestCard;
    } else {
      cards = $('.card')
    }
    cards.each(function(i, card) {
      card = $(card);
      card.find('.status-badge').text('0')
      card.find('.status-badge').each(function(i, b) {
        if ($(b).text() === '0') {
          $(b).remove();
        }
      })
      card.find('.card-body a[data-status]').each(function(i, button) {
        let btn_status = $(button).data('status');
        let btn_text = $(button).text();
        if (#{{Attendance::PRESENCE_STATES}}.includes(btn_status)) {
          btn_status = '#{Attendance::Status::ATTENDED}';
          btn_text = '#{attendance_state_text}';
        }
        const btn_color = $(button).attr('class').match(/btn-(.+?)\b/)[1];
        badge = card.find('.status-badge[data-status=' + btn_status + ']')[0]
        if (badge) {
          badge = $(badge);
          badge.text(Number(badge.text()) + 1);
        } else {
          let new_badge = $("<div class='status-badge badge ml-2 badge-" + btn_color + "' data-toggle='tooltip' data-status='" + btn_status + "' title='" + btn_text + "'>1</div>");
          card.find('.card-header').append(new_badge);
          new_badge.tooltip();
        }
      })
    })
  }

  $(function() {
    $('.card').on('ajax:replaced', updateBadges);
    updateBadges();
  });
